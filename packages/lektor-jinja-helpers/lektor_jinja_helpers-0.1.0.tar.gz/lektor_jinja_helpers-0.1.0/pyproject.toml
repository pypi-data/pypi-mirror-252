[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "lektor-jinja-helpers"
dynamic = []
description = "An assortment of Jinja filters, tests, and globals for Lektor"
keywords = [
    "lektor plugin",
    "jinja filters",
    "jinja tests",
    "jinja globals",
]
authors = [
    { name = "Jeff Dairiki", email = "dairiki@dairiki.org" },
]
dependencies = [
    "excerpt-html>=0.2.0",
    "markupsafe>=2.1.3",
    "html5lib>=1.1",
    "beautifulsoup4>=4.12.2",
    "typing-extensions>=4.7.1; python_version < \"3.12\"",
]
requires-python = ">=3.8"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Plugins",
    "Environment :: Web Environment",
    "Framework :: Lektor",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing",
    "Typing :: Typed",
]
version = "0.1.0"

[project.license]
text = "BSD-3-Clause"

[project.urls]
Homepage = "https://github.com/dairiki/lektor-jinja-helpers"

[project.optional-dependencies]
ansible = [
    "ansible-core>=2.13",
]
ansible-full = [
    "ansible",
    "ansible-core>=2.13",
]

[project.entry-points."lektor.plugins"]
jinja-helpers = "lektor_jinja_helpers:JinjaHelpersPlugin"

[tool.pdm.version]
source = "scm"

[tool.pdm.scripts]
cover = "    pytest tests -ra\n        --cov=lektor_jinja_helpers\n        --cov-report=term-missing\n        --cov-report=html\n    "

[tool.pdm.dev-dependencies]
dev = [
    "lektor>=3.3.10",
    "mypy~=1.8.0",
    "ruff>=0.1.14",
    "pytest>=7.4.0",
    "types-beautifulsoup4>=4.12.0.6",
    "pytest-cov>=4.1.0",
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore:pkg_resources:DeprecationWarning:lektor.packages",
    "ignore:.*crypt:DeprecationWarning:ansible.utils.encrypt",
]

[tool.coverage.paths]
paths = [
    "src/lektor_jinja_helpers",
    ".tox/**/lektor_jinja_helpers",
]

[tool.coverage.run]
source = [
    "lektor_jinja_helpers",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "^\\s*\\.\\.\\.\\s*$",
    "^\\s*raise\\s+NotImplementedError\\(\\)\\s*$",
    "^if TYPE_CHECKING:\\s*",
]

[tool.mypy]
files = [
    "src/**/*.py",
    "tests/**/*.py",
]
strict = true

[[tool.mypy.overrides]]
module = [
    "ansible.*",
    "excerpt_html",
    "lektor.*",
]
ignore_missing_imports = true

[tool.ruff]
extend-exclude = [
    ".pdm-build",
]
explicit-preview-rules = true
allowed-confusables = [
    "’",
    "–",
]

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "UP",
    "B",
    "Q",
    "YTT",
    "C4",
    "T10",
    "EM",
    "FA",
    "T20",
    "RSE",
    "I",
    "C90",
    "PGH",
]

[tool.ruff.lint.isort]
force-single-line = true
order-by-type = false
known-first-party = [
    "lektor_jinja_helpers",
]
