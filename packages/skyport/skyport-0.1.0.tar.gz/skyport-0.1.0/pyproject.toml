[tool.poetry]
name = "skyport"
version = "0.1.0"
description = "Skyport is a cli for obtaining information from astronomical objects."
authors = ["Henrique Sebasti√£o <contato@henriquesebastiao.com>"]
readme = "README.md"
packages = [{include = "skyport"}]
classifiers = [
    "Environment :: Console",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
    "Topic :: Education",
    "Topic :: Office/Business :: News/Diary",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Utilities",
]

[tool.poetry.urls]
"Documentation" = "https://skyport.henriquesebastiao.com"
"Homepage" = "https://skyport.henriquesebastiao.com"
"Repository" = "https://github.com/henriquesebastiao/skyport"
"Bug Tracker" = "https://github.com/henriquesebastiao/skyport/issues"

[tool.poetry.dependencies]
python = "^3.11"
typer = {extras = ["all"], version = "^0.9.0"}
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
coverage = "^7.4.0"
pytest-cov = "^4.1.0"
taskipy = "^1.12.2"
blue = "^0.9.1"
ruff = "^0.1.14"
isort = "^5.13.2"

[tool.poetry.group.doc.dependencies]
mkdocs-material = "^9.5.4"
mkdocstrings = "^0.24.0"
mkdocstrings-python = "^1.8.0"
mkdocs-macros-plugin = "^1.0.5"
jinja2 = "^3.1.3"
pygments = "^2.17.2"
pymdown-extensions = "^10.7"
mkdocs-git-committers-plugin-2 = "^2.2.3"
mkdocs-git-authors-plugin = "^0.7.2"
mkdocs-git-revision-date-localized-plugin = "^1.2.2"

[tool.poetry.scripts]
skyport = "skyport.cli:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79

[tool.coverage.run]
branch = true
omit = ["**/*test*.py"]

[tool.pytest.ini_options]
pythonpath = "."
addopts = "--doctest-modules"
python_files = "test.py tests.py test_*.py tests_*.py *_test.py *_tests.py"

[tool.taskipy.tasks]
lint = "ruff . && blue --check . --diff && isort --check --diff ."
format = "blue .  && isort ."
doc = "mkdocs serve"
pre_test = "task lint"
test = "pytest -s -x --cov=skyport -vv"
post_test = "coverage run -m pytest && coverage html"
pre-commit = "task lint && pytest -x --cov=skyport -vv && coverage run -m pytest && coverage html"
build = "poetry build"
check = "twine check dist/*"
publish = "poetry publish --build"
run = "poetry run skyport"
