import pytest
from datetime import datetime
from uuid import uuid4

from visma_administration.api import Visma

Visma.add_company(name="FTG10", common_path="Z:\\Gemensamma filer", company_path="Z:\\FÃ¶retag\\FTG10")

@pytest.fixture
def invoice():
    """
    Creates or gets an invoice with invoice number 41cb6edd-2-test
    """
    try:
        with Visma.get_company_api("FTG10") as api:
            invoice = api.supplier_invoice_head.get(adk_sup_inv_head_invoice_number="41cb6edd-2-test")
            yield invoice
    except:
        with Visma.get_company_api("FTG10") as api:
            invoice = api.supplier_invoice_head.new()
            invoice.adk_sup_inv_head_invoice_number = "41cb6edd-2-test"
            invoice.adk_sup_inv_head_supplier_name = "Created for test"
            invoice.adk_sup_inv_head_invoice_date = datetime(2021, 3, 2)
            invoice.create()
            yield invoice

def test_getting_invoice_data():
    with Visma.get_company_api("FTG10") as api:
        invoice = api.supplier_invoice_head.get(adk_sup_inv_head_invoice_number="41cb6edd-2-test")
        assert invoice.adk_sup_inv_head_invoice_number == "41cb6edd-2-test"
        assert invoice.adk_sup_inv_head_supplier_name == "Created for test"
        assert str(invoice.adk_sup_inv_head_invoice_date) == "2021-03-02 00:00:00"

def test_create_rows_for_invoice():
    with Visma.get_company_api("FTG10") as api:
        invoice = api.supplier_invoice_head.get(adk_sup_inv_head_invoice_number="41cb6edd-2-test")

        # This might seem odd, but Visma updates the index of all rows when calling .delete() on one.
        # And according to the docs, the correct way to approach this is to get all rows again.
        # Total, Tax etc is autofilled from a template, and is therefore always present as a row first in the list
        # even if we try to delete those first, they will just be autogenerated.
        # That's why we delete all rows by negative index to get rid of all custom rows
        nrows = invoice.adk_sup_inv_head_nrows
        for i in range(int(nrows)):
            invoice.rows()[-1].delete()

        rows = invoice.create_rows(quantity=2)
        rows[0].adk_ooi_row_account_number = "5010"
        rows[1].adk_ooi_row_account_number = "8012"

        invoice.save()
        
        account_numbers = [row.adk_ooi_row_account_number for row in invoice.rows()]
        assert "5010" in account_numbers
        assert "8012" in account_numbers

def test_deleting_random_rows_keeps_other_data_intact():
    with Visma.get_company_api("FTG10") as api:
        invoice = api.supplier_invoice_head.get(adk_sup_inv_head_invoice_number="41cb6edd-2-test")

        # This might seem odd, but Visma updates the index of all rows when calling .delete() on one.
        # And according to the docs, the correct way to approach this is to get all rows again.
        # Total, Tax etc is autofilled from a template, and is therefore always present as a row first in the list
        # even if we try to delete those first, they will just be autogenerated.
        # That's why we delete all rows by negative index to get rid of all custom rows
        nrows = invoice.adk_sup_inv_head_nrows
        for i in range(int(nrows)):
            invoice.rows()[-1].delete()

        rows = invoice.create_rows(quantity=5)
        rows[0].adk_ooi_row_account_number = "5010"
        rows[1].adk_ooi_row_account_number = "8012"
        rows[2].adk_ooi_row_account_number = "8116"
        rows[3].adk_ooi_row_account_number = "8222"
        rows[4].adk_ooi_row_account_number = "8240"
        invoice.save()

        account_numbers = [row.adk_ooi_row_account_number for row in invoice.rows()]
        assert "5010" in account_numbers
        assert "8012" in account_numbers
        assert "8116" in account_numbers
        assert "8222" in account_numbers
        assert "8240" in account_numbers

        # Delete 8012 and 8222 from rows
        # Remember we have to delete them in separate loops because invoice.rows() needs to be recalled after a delete
        for row in invoice.rows():
            if row.adk_ooi_row_account_number == "8012":
                row.delete()

        for row in invoice.rows():
            if row.adk_ooi_row_account_number == "8222":
                row.delete()

        account_numbers = [row.adk_ooi_row_account_number for row in invoice.rows()]
        assert "8012" not in account_numbers
        assert "8222" not in account_numbers
        assert "5010" in account_numbers
        assert "8116" in account_numbers
        assert "8240" in account_numbers

def test_creating_invoice_and_rows():
    with Visma.get_company_api("FTG10") as api:
        generated_uuid = str(uuid4())[:10]
        invoice = api.supplier_invoice_head.new()
        invoice.adk_sup_inv_head_invoice_number = generated_uuid

        rows = invoice.create_rows(quantity=2)
        rows[0].adk_ooi_row_account_number = "8012"
        rows[1].adk_ooi_row_account_number = "5010"
        invoice.save()

        assert invoice.adk_sup_inv_head_invoice_number == generated_uuid
        account_numbers = [row.adk_ooi_row_account_number for row in invoice.rows()]
        assert "8012" in account_numbers
        assert "5010" in account_numbers