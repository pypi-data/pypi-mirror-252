"use strict";(self.webpackChunkreact_genft_button=self.webpackChunkreact_genft_button||[]).push([[821],{50821:(t,e,n)=>{n.d(e,{OKXConnector:()=>r});var s=n(2600),i=n(38690),c=n(82611),o=n(66131),a=n(97419),h=n(59862);n(65892);class r extends o.InjectedConnector{constructor(t){const e={...{name:"OKX",shimDisconnect:!0,shimChainChangedDisconnect:!0,getProvider:h.g},...t.options};super({chains:t.chains,options:e,connectorStorage:t.connectorStorage}),(0,s._)(this,"id",c.w.okx)}async connect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{var e,n;const o=await this.getProvider();if(!o)throw new i.a;this.setupListeners(),this.emit("message",{type:"connecting"});let h=null;if(null!==(e=this.options)&&void 0!==e&&e.shimDisconnect&&!Boolean(this.connectorStorage.getItem(this.shimDisconnectKey))){h=await this.getAccount().catch((()=>null));if(!!h)try{await o.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}catch(s){if(this.isUserRejectedRequestError(s))throw new i.U(s)}}if(!h){const t=await o.request({method:"eth_requestAccounts"});h=a.getAddress(t[0])}let r=await this.getChainId(),u=this.isChainUnsupported(r);if(t.chainId&&r!==t.chainId)try{await this.switchChain(t.chainId),r=t.chainId,u=this.isChainUnsupported(t.chainId)}catch(c){console.error("Could not switch to chain id : ".concat(t.chainId),c)}null!==(n=this.options)&&void 0!==n&&n.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");const d={chain:{id:r,unsupported:u},provider:o,account:h};return this.emit("connect",d),d}catch(s){if(this.isUserRejectedRequestError(s))throw new i.U(s);if(-32002===s.code)throw new i.R(s);throw s}}async switchAccount(){const t=await this.getProvider();await t.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}}}}]);
//# sourceMappingURL=821.32fba5a0.chunk.js.map