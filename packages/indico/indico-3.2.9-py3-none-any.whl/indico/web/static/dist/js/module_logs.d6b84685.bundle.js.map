{"version":3,"file":"js/module_logs.d6b84685.bundle.js","mappings":"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","sources":["webpack:///indico/modules/logs/client/js/actions.js","webpack:///indico/modules/logs/client/js/components/LogEntryModal.jsx","webpack:///indico/modules/logs/client/js/containers/LogEntryModal.js","webpack:///indico/modules/logs/client/js/components/LogEntryList.jsx","webpack:///indico/modules/logs/client/js/containers/LogEntryList.js","webpack:///indico/modules/logs/client/js/components/Filter.jsx","webpack:///indico/modules/logs/client/js/containers/Filter.js","webpack:///indico/modules/logs/client/js/components/SearchBox.jsx","webpack:///indico/modules/logs/client/js/containers/SearchBox.js","webpack:///indico/modules/logs/client/js/components/Toolbar.jsx","webpack:///indico/modules/logs/client/js/components/EventLog.jsx","webpack:///indico/modules/logs/client/js/reducers.js","webpack:///indico/modules/logs/client/js/index.jsx"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport qs from 'qs';\n\nimport {indicoAxios, handleAxiosError} from 'indico/utils/axios';\n\nexport const SET_KEYWORD = 'SET_KEYWORD';\nexport const SET_FILTER = 'SET_FILTER';\nexport const SET_PAGE = 'SET_PAGE';\nexport const UPDATE_ENTRIES = 'UPDATE_ENTRIES';\nexport const FETCH_STARTED = 'FETCH_STARTED';\nexport const FETCH_FAILED = 'FETCH_FAILED';\nexport const SET_DETAILED_VIEW = 'SET_DETAILED_VIEW';\nexport const VIEW_PREV_ENTRY = 'VIEW_PREV_ENTRY';\nexport const VIEW_NEXT_ENTRY = 'VIEW_NEXT_ENTRY';\nexport const SET_METADATA_QUERY = 'SET_METADATA_QUERY';\nexport const SET_INITIAL_REALMS = 'SET_INITIAL_REALMS';\n\nexport function setKeyword(keyword) {\n  return {type: SET_KEYWORD, keyword};\n}\n\nexport function setFilter(filter) {\n  return {type: SET_FILTER, filter};\n}\n\nexport function setPage(currentPage) {\n  return {type: SET_PAGE, currentPage};\n}\n\nexport function setDetailedView(entryIndex) {\n  return {type: SET_DETAILED_VIEW, currentViewIndex: entryIndex};\n}\n\nexport function setMetadataQuery(metadataQuery) {\n  return {type: SET_METADATA_QUERY, metadataQuery};\n}\n\nexport function setInitialRealms(initialRealms) {\n  return {type: SET_INITIAL_REALMS, initialRealms};\n}\n\nexport function clearMetadataQuery() {\n  return dispatch => {\n    dispatch(setMetadataQuery({}));\n    dispatch(setPage(1));\n    dispatch(setDetailedView(null));\n    dispatch(fetchLogEntries());\n    history.replaceState({}, null, location.pathname);\n  };\n}\n\nexport function showRelatedEntries() {\n  return (dispatch, getStore) => {\n    const {\n      logs: {entries, currentViewIndex},\n    } = getStore();\n\n    const entry = entries[currentViewIndex];\n    const queryString = qs.stringify({meta: entry.meta}, {allowDots: true});\n    dispatch(setMetadataQuery(entry.meta));\n    dispatch(setPage(1));\n    dispatch(setDetailedView(null));\n    dispatch(fetchLogEntries());\n    history.replaceState({}, null, `${location.pathname}?${queryString}`);\n  };\n}\n\nexport function viewPrevEntry() {\n  return async (dispatch, getStore) => {\n    const {\n      staticData: {pageSize},\n      logs: {currentViewIndex, currentPage},\n    } = getStore();\n\n    if (currentViewIndex === 0) {\n      if (currentPage === 0) {\n        // ERROR!\n      } else {\n        await dispatch(setPage(currentPage - 1));\n        await dispatch(fetchLogEntries());\n        await dispatch(setDetailedView(pageSize - 1));\n      }\n    } else {\n      dispatch({type: SET_DETAILED_VIEW, currentViewIndex: currentViewIndex - 1});\n    }\n  };\n}\n\nexport function viewNextEntry() {\n  return async (dispatch, getStore) => {\n    const {\n      staticData: {pageSize},\n      logs: {currentViewIndex, currentPage, pages},\n    } = getStore();\n\n    if (currentViewIndex === pageSize - 1) {\n      if (currentPage === pages[pages.length - 1]) {\n        // ERROR!\n      } else {\n        await dispatch(setPage(currentPage + 1));\n        await dispatch(setDetailedView(0));\n        await dispatch(fetchLogEntries());\n      }\n    } else {\n      dispatch({type: SET_DETAILED_VIEW, currentViewIndex: currentViewIndex + 1});\n    }\n  };\n}\n\nexport function updateEntries(entries, pages, totalPageCount) {\n  return {type: UPDATE_ENTRIES, entries, pages, totalPageCount};\n}\n\nexport function fetchStarted() {\n  return {type: FETCH_STARTED};\n}\n\nexport function fetchFailed() {\n  return {type: FETCH_FAILED};\n}\n\nexport function fetchLogEntries() {\n  return async (dispatch, getStore) => {\n    dispatch(fetchStarted());\n    const {\n      logs: {filters, keyword, currentPage, metadataQuery},\n      staticData: {fetchLogsUrl},\n    } = getStore();\n\n    const params = {\n      page: currentPage,\n      filters: [],\n      meta: metadataQuery,\n    };\n    if (keyword) {\n      params.q = keyword;\n    }\n\n    Object.entries(filters).forEach(([item, active]) => {\n      if (active) {\n        params.filters.push(item);\n      }\n    });\n\n    let response;\n    try {\n      response = await indicoAxios.get(fetchLogsUrl, {\n        params,\n        paramsSerializer: p => qs.stringify(p, {arrayFormat: 'repeat', allowDots: true}),\n      });\n    } catch (error) {\n      handleAxiosError(error);\n      dispatch(fetchFailed());\n      return;\n    }\n    const {entries, pages, total_page_count: totalPageCount} = response.data;\n    dispatch(updateEntries(entries, pages, totalPageCount));\n  };\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {IButton, Modal} from 'indico/react/components';\nimport {Translate} from 'indico/react/i18n';\nimport {Slot} from 'indico/react/util';\n\nexport default class LogEntryModal extends React.Component {\n  static propTypes = {\n    entries: PropTypes.array.isRequired,\n    currentViewIndex: PropTypes.number,\n    setDetailedView: PropTypes.func.isRequired,\n    prevEntry: PropTypes.func.isRequired,\n    nextEntry: PropTypes.func.isRequired,\n    relatedEntries: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    totalPageCount: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    currentViewIndex: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.modal = undefined;\n    this.onClose = this.onClose.bind(this);\n    this.prevEntry = this.prevEntry.bind(this);\n    this.nextEntry = this.nextEntry.bind(this);\n    this.relatedEntries = this.relatedEntries.bind(this);\n  }\n\n  componentDidUpdate() {\n    const {currentViewIndex} = this.props;\n    if (currentViewIndex !== null) {\n      this.open();\n    }\n  }\n\n  open() {\n    this.modal.open();\n  }\n\n  onClose() {\n    const {setDetailedView} = this.props;\n    setDetailedView(null);\n  }\n\n  prevEntry() {\n    const {prevEntry} = this.props;\n    prevEntry();\n  }\n\n  nextEntry() {\n    const {nextEntry} = this.props;\n    nextEntry();\n  }\n\n  relatedEntries() {\n    const {relatedEntries} = this.props;\n    relatedEntries();\n  }\n\n  _isFirstEntry() {\n    const {currentPage, currentViewIndex} = this.props;\n    return currentPage === 1 && currentViewIndex === 0;\n  }\n\n  _isLastEntry() {\n    const {currentPage, totalPageCount, currentViewIndex, entries} = this.props;\n    return currentPage === totalPageCount && currentViewIndex === entries.length - 1;\n  }\n\n  _hasRelatedEntries() {\n    const {currentViewIndex, entries} = this.props;\n    const entry = entries[currentViewIndex];\n    return Object.keys(entry.meta).length !== 0;\n  }\n\n  render() {\n    const {currentViewIndex, entries} = this.props;\n\n    if (currentViewIndex === null) {\n      return '';\n    }\n\n    const {\n      description,\n      html,\n      user: {fullName},\n      time,\n    } = entries[currentViewIndex];\n\n    return (\n      <Modal\n        title={description}\n        ref={ref => {\n          this.modal = ref;\n        }}\n        onClose={this.onClose}\n        contentLabel=\"Details about log entry\"\n        fixedFooter\n      >\n        <Slot>\n          <table className=\"i-table log-modal-details\" dangerouslySetInnerHTML={{__html: html}} />\n          <div className=\"text-superfluous log-modal-author-info flexrow f-j-end\">\n            <span>\n              {fullName && <span className=\"log-modal-user\">{fullName} </span>}\n              on\n              <span className=\"log-modal-time\"> {moment(time).format('ddd, D/M/YYYY HH:mm')}</span>\n            </span>\n          </div>\n        </Slot>\n        <Slot name=\"footer\">\n          <div className=\"group flexrow f-j-space-between\">\n            <IButton\n              title=\"Previous\"\n              icon=\"prev\"\n              onClick={this.prevEntry}\n              disabled={this._isFirstEntry()}\n            >\n              <Translate>Previous</Translate>\n            </IButton>\n\n            <IButton onClick={this.relatedEntries} disabled={!this._hasRelatedEntries()}>\n              <Translate>Related entries</Translate>\n            </IButton>\n            <IButton\n              title=\"Next\"\n              classes={{next: true}}\n              highlight\n              onClick={this.nextEntry}\n              disabled={this._isLastEntry()}\n            >\n              <Translate>Next</Translate>\n            </IButton>\n          </div>\n        </Slot>\n      </Modal>\n    );\n  }\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport {connect} from 'react-redux';\n\nimport {setDetailedView, showRelatedEntries, viewNextEntry, viewPrevEntry} from '../actions';\nimport LogEntryModal from '../components/LogEntryModal';\n\nconst mapStateToProps = ({logs}) => ({\n  currentViewIndex: logs.currentViewIndex,\n  currentPage: logs.currentPage,\n  totalPageCount: logs.totalPageCount,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDetailedView: entryIndex => {\n    dispatch(setDetailedView(entryIndex));\n  },\n  prevEntry: () => {\n    dispatch(viewPrevEntry());\n  },\n  nextEntry: () => {\n    dispatch(viewNextEntry());\n  },\n  relatedEntries: () => {\n    dispatch(showRelatedEntries());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LogEntryModal);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Image} from 'semantic-ui-react';\n\nimport {Paginator, TooltipIfTruncated, MessageBox} from 'indico/react/components';\nimport {Translate} from 'indico/react/i18n';\n\nimport LogEntryModal from '../containers/LogEntryModal';\n\nclass LogEntry extends React.PureComponent {\n  static propTypes = {\n    entry: PropTypes.object.isRequired,\n    setDetailedView: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.openDetails = this.openDetails.bind(this);\n  }\n\n  openDetails(index) {\n    const {setDetailedView} = this.props;\n    setDetailedView(index);\n  }\n\n  iconProps(entry) {\n    if (entry.type === 'email') {\n      switch (entry.payload.state) {\n        case 'pending':\n          return {\n            'className': 'log-icon semantic-text warning',\n            'title': Translate.string('This email is pending and will be sent soon.'),\n            'data-qtip-style': 'warning',\n          };\n        case 'sent':\n          return {\n            'className': 'log-icon semantic-text success',\n            'title': Translate.string('This email has been sent.'),\n            'data-qtip-style': 'success',\n          };\n        case 'failed':\n          return {\n            'className': 'log-icon semantic-text error',\n            'title': Translate.string('Sending this email failed.'),\n            'data-qtip-style': 'danger',\n          };\n      }\n    }\n\n    return {className: 'log-icon'};\n  }\n\n  entryKind(entry) {\n    if (entry.type !== 'email') {\n      return entry.kind;\n    }\n\n    const mapping = {pending: 'change', sent: 'positive', failed: 'negative'};\n    return mapping[entry.payload.state] || 'other';\n  }\n\n  render() {\n    const {entry} = this.props;\n    return (\n      <li className={`log-realm-${entry.realm} log-kind-${this.entryKind(entry)}`}>\n        <span className=\"log-module\">\n          <span {...this.iconProps(entry)}>\n            <i className=\"log-realm\" />\n            <i className=\"log-kind icon-circle-small\" />\n          </span>\n          <span className=\"bold\">{entry.module}</span>\n        </span>\n        <TooltipIfTruncated>\n          <span className=\"log-entry-description\" onClick={() => this.openDetails(entry.index)}>\n            {entry.description}\n          </span>\n        </TooltipIfTruncated>\n        <span className=\"log-entry-details\">\n          <span className=\"logged-time\" title={moment(entry.time).format('DD/MM/YYYY HH:mm')}>\n            <time dateTime={entry.time}>{moment(entry.time).fromNow()}</time>\n          </span>\n          {entry.user.avatarURL ? (\n            <Image\n              avatar\n              title={entry.user.fullName}\n              src={entry.user.avatarURL}\n              className=\"user-picture ui-qtip\"\n            />\n          ) : (\n            ''\n          )}\n        </span>\n      </li>\n    );\n  }\n}\n\nexport default class LogEntryList extends React.PureComponent {\n  static propTypes = {\n    entries: PropTypes.array.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    pages: PropTypes.array.isRequired,\n    changePage: PropTypes.func.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    setDetailedView: PropTypes.func.isRequired,\n  };\n\n  renderEmpty() {\n    return <MessageBox type=\"info\">No logs to show</MessageBox>;\n  }\n\n  renderSpinner() {\n    return (\n      <div className=\"event-log-list-spinner\">\n        <div className=\"i-spinner\" />\n      </div>\n    );\n  }\n\n  renderList() {\n    const {entries, pages, currentPage, changePage, isFetching, setDetailedView} = this.props;\n    return (\n      <>\n        {isFetching && this.renderSpinner()}\n        <ul className={`event-log-list ${isFetching ? 'loading' : ''}`}>\n          {entries.map(entry => (\n            <LogEntry key={entry.id} entry={entry} setDetailedView={setDetailedView} />\n          ))}\n        </ul>\n        {!isFetching && (\n          <Paginator currentPage={currentPage} pages={pages} changePage={changePage} />\n        )}\n        <LogEntryModal entries={entries} />\n      </>\n    );\n  }\n\n  render() {\n    const {entries, isFetching} = this.props;\n    if (entries.length === 0) {\n      if (isFetching) {\n        return this.renderSpinner();\n      }\n\n      return this.renderEmpty();\n    } else {\n      return this.renderList();\n    }\n  }\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport {connect} from 'react-redux';\n\nimport {setPage, fetchLogEntries, setDetailedView} from '../actions';\nimport LogEntryList from '../components/LogEntryList';\n\nconst mapStateToProps = ({logs}) => ({\n  entries: logs.entries,\n  currentPage: logs.currentPage,\n  pages: logs.pages,\n  isFetching: logs.isFetching,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changePage: page => {\n    dispatch(setPage(page));\n    dispatch(fetchLogEntries());\n  },\n  setDetailedView: entryIndex => {\n    dispatch(setDetailedView(entryIndex));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LogEntryList);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {Translate} from 'indico/react/i18n';\n\nexport default class Filter extends React.Component {\n  static propTypes = {\n    realms: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilter: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {realms, filters, setFilter} = this.props;\n    return (\n      <div className=\"toolbar\">\n        <div className={`group i-selection ${realms.length <= 1 ? 'hidden' : ''}`}>\n          <span className=\"i-button label\">\n            <Translate>Show</Translate>\n          </span>\n          {Object.keys(realms)\n            .sort()\n            .map(name => (\n              <React.Fragment key={name}>\n                <input\n                  type=\"checkbox\"\n                  id={`realm-${name}`}\n                  data-realm={name}\n                  defaultChecked={filters[name]}\n                  onChange={e => setFilter({[name]: e.target.checked})}\n                />\n                <label htmlFor={`realm-${name}`} className=\"i-button\">\n                  {realms[name]}\n                </label>\n              </React.Fragment>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport {connect} from 'react-redux';\n\nimport {setFilter, fetchLogEntries, setPage} from '../actions';\nimport Filter from '../components/Filter';\n\nconst mapStateToProps = ({logs}) => ({\n  filters: logs.filters,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setFilter: filter => {\n    dispatch(setFilter(filter));\n    dispatch(setPage(1));\n    dispatch(fetchLogEntries());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Filter);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class SearchBox extends React.Component {\n  static propTypes = {\n    setKeyword: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {setKeyword} = this.props;\n    return (\n      <div className=\"toolbar\">\n        <div className=\"group\">\n          <span className=\"i-button label\">\n            <span className=\"icon-search\" />\n          </span>\n          <input type=\"text\" onChange={e => setKeyword(e.target.value.trim())} />\n        </div>\n      </div>\n    );\n  }\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport debounce from 'lodash/debounce';\nimport {connect} from 'react-redux';\n\nimport {setKeyword, fetchLogEntries, setPage} from '../actions';\nimport SearchBox from '../components/SearchBox';\n\nconst mapDispatchToProps = dispatch => ({\n  setKeyword: debounce(keyword => {\n    dispatch(setKeyword(keyword));\n    dispatch(setPage(1));\n    dispatch(fetchLogEntries());\n  }, 250),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SearchBox);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport Filter from '../containers/Filter';\nimport SearchBox from '../containers/SearchBox';\n\nclass Toolbar extends React.Component {\n  static propTypes = {\n    realms: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {realms} = this.props;\n    return (\n      <div className=\"toolbars\">\n        <Filter realms={realms} />\n        <SearchBox />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({staticData}) => ({\n  realms: staticData.realms,\n});\n\nexport default connect(mapStateToProps)(Toolbar);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {Param, Translate} from 'indico/react/i18n';\n\nimport {clearMetadataQuery} from '../actions';\nimport LogEntryList from '../containers/LogEntryList';\n\nimport Toolbar from './Toolbar';\n\nfunction MetadataQueryMessage() {\n  const dispatch = useDispatch();\n  const resetURLFiltering = () => {\n    dispatch(clearMetadataQuery());\n  };\n\n  return (\n    <div className=\"highlight-message-box\">\n      <span className=\"icon\" />\n      <div className=\"message-text\">\n        <Translate>\n          Log entries are currently filtered by URL.{' '}\n          <Param name=\"link\" wrapper={<a onClick={resetURLFiltering} />}>\n            Click here\n          </Param>{' '}\n          to disable the filter.\n        </Translate>\n      </div>\n    </div>\n  );\n}\n\nMetadataQueryMessage.propTypes = {};\n\nexport default function EventLog() {\n  const metadataQuery = useSelector(state => state.logs.metadataQuery);\n  return (\n    <>\n      {Object.keys(metadataQuery).length !== 0 && <MetadataQueryMessage />}\n      <Toolbar />\n      <LogEntryList />\n    </>\n  );\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport * as actions from './actions';\n\nconst initialState = {\n  entries: [],\n  keyword: null,\n  currentPage: 1,\n  isFetching: false,\n  metadataQuery: {},\n  filters: {},\n  pages: [],\n  totalPageCount: 0,\n  currentViewIndex: null,\n};\n\nexport default function logReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_INITIAL_REALMS:\n      return {...state, filters: Object.fromEntries(action.initialRealms.map(r => [r, true]))};\n    case actions.SET_KEYWORD:\n      return {...state, keyword: action.keyword};\n    case actions.SET_FILTER:\n      return {...state, filters: {...state.filters, ...action.filter}};\n    case actions.SET_PAGE:\n      return {...state, currentPage: action.currentPage};\n    case actions.UPDATE_ENTRIES:\n      return {\n        ...state,\n        entries: action.entries,\n        pages: action.pages,\n        totalPageCount: action.totalPageCount,\n        isFetching: false,\n      };\n    case actions.FETCH_STARTED:\n      return {...state, isFetching: true};\n    case actions.FETCH_FAILED:\n      return {...state, isFetching: false};\n    case actions.SET_DETAILED_VIEW:\n      return {...state, currentViewIndex: action.currentViewIndex};\n    case actions.SET_METADATA_QUERY:\n      return {...state, metadataQuery: action.metadataQuery};\n    default:\n      return state;\n  }\n}\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport createReduxStore from 'indico/utils/redux';\n\nimport {fetchLogEntries, setMetadataQuery, setInitialRealms} from './actions';\nimport EventLog from './components/EventLog';\nimport reducer from './reducers';\n\nimport '../style/logs.scss';\n\nwindow.addEventListener('load', () => {\n  const rootElement = document.querySelector('.event-log');\n  const initialData = {\n    staticData: {\n      fetchLogsUrl: rootElement.dataset.fetchLogsUrl,\n      realms: JSON.parse(rootElement.dataset.realms),\n      pageSize: 15,\n    },\n  };\n  const store = createReduxStore(\n    'event-logs',\n    {\n      logs: reducer,\n    },\n    initialData\n  );\n  store.dispatch(setInitialRealms(Object.keys(initialData.staticData.realms)));\n  store.dispatch(setMetadataQuery(JSON.parse(rootElement.dataset.metadataQuery)));\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <EventLog />\n    </Provider>,\n    rootElement\n  );\n\n  store.dispatch(fetchLogEntries());\n});\n"],"names":["SET_KEYWORD","SET_FILTER","SET_PAGE","UPDATE_ENTRIES","FETCH_STARTED","FETCH_FAILED","SET_DETAILED_VIEW","SET_METADATA_QUERY","SET_INITIAL_REALMS","setPage","currentPage","type","setDetailedView","entryIndex","currentViewIndex","setMetadataQuery","metadataQuery","fetchLogEntries","async","dispatch","getStore","logs","filters","keyword","staticData","fetchLogsUrl","params","page","meta","response","q","Object","entries","forEach","_ref","item","active","push","indicoAxios","paramsSerializer","p","qs","arrayFormat","allowDots","error","handleAxiosError","pages","total_page_count","totalPageCount","data","updateEntries","LogEntryModal","React","constructor","props","super","this","modal","undefined","onClose","bind","prevEntry","nextEntry","relatedEntries","componentDidUpdate","open","_isFirstEntry","_isLastEntry","length","_hasRelatedEntries","entry","keys","render","description","html","user","fullName","time","Modal","title","ref","contentLabel","fixedFooter","Slot","className","dangerouslySetInnerHTML","__html","moment","format","name","IButton","icon","onClick","disabled","Translate","classes","next","highlight","_defineProperty","PropTypes","connect","pageSize","queryString","history","replaceState","location","pathname","LogEntry","openDetails","index","iconProps","payload","state","entryKind","kind","pending","sent","failed","realm","module","TooltipIfTruncated","dateTime","fromNow","avatarURL","Image","avatar","src","LogEntryList","renderEmpty","MessageBox","renderSpinner","renderList","changePage","isFetching","map","key","id","Paginator","Filter","realms","setFilter","sort","defaultChecked","onChange","e","target","checked","htmlFor","filter","SearchBox","setKeyword","value","trim","debounce","Toolbar","MetadataQueryMessage","useDispatch","Param","wrapper","resetURLFiltering","EventLog","useSelector","propTypes","initialState","logReducer","arguments","action","actions","_objectSpread","fromEntries","initialRealms","r","window","addEventListener","rootElement","document","querySelector","initialData","dataset","JSON","parse","store","createReduxStore","reducer","ReactDOM","Provider"],"sourceRoot":""}