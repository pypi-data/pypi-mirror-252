import src.vdot_calculator.func_module as vdot
import datetime
from pytest import mark
import pytest


@mark.parametrize(
    'v_dot, time, pace',
    [
        (25.5, datetime.time(minute=35, second=00), datetime.time(minute=7, second=00))
    ])
def test_vdot_from_time_and_pace(v_dot, time, pace):
    error = vdot.vdot_from_time_and_pace(time, pace) - v_dot
    assert abs(error) <= 0.2


@mark.parametrize(
    'v_dot, distance, pace',
    [
        (39, 10000, datetime.time(minute=5, second=7)),
        (39, "10000", datetime.time(minute=5, second=7)),
    ])
def test_vdot_from_distance(v_dot, distance, pace):

    error = vdot.vdot_from_distance_and_pace(distance, pace) - v_dot
    assert abs(error) <= 0.2


@mark.parametrize(
    'v_dot, distance, time',
    [
        (40, 5000, datetime.time(minute=24, second=8))
    ])
def test_vdot_from_time_and_distance(v_dot, distance, time):
    error = vdot.vdot_from_time_and_distance(time, distance) - v_dot
    assert abs(error) <= 0.2


@mark.parametrize(
    'v_dot, distance, time_minutes',
    [
        (30, 1500, 8.5),
        (31, 1500, 8.25),
        (32, 1500, 8.03333333333333),
        (33, 1500, 7.81666666666667),
        (34, 1500, 7.61666666666667),
        (35, 1500, 7.41666666666667),
        (36, 1500, 7.23333333333333),
        (37, 1500, 7.06666666666667),
        (38, 1500, 6.9),
        (39, 1500, 6.73333333333333),
        (40, 1500, 6.58333333333333),
        (41, 1500, 6.45),
        (42, 1500, 6.31666666666667),
        (43, 1500, 6.18333333333333),
        (44, 1500, 6.05),
        (45, 1500, 5.93333333333333),
        (46, 1500, 5.81666666666667),
        (47, 1500, 5.7),
        (48, 1500, 5.6),
        (49, 1500, 5.5),
        (50, 1500, 5.4),
        (51, 1500, 5.3),
        (52, 1500, 5.21666666666667),
        (53, 1500, 5.11666666666667),
        (54, 1500, 5.03333333333333),
        (55, 1500, 4.95),
        (56, 1500, 4.88333333333333),
        (57, 1500, 4.8),
        (58, 1500, 4.73333333333333),
        (59, 1500, 4.65),
        (60, 1500, 4.58333333333333),
        (61, 1500, 4.51666666666667),
        (62, 1500, 4.45),
        (63, 1500, 4.4),
        (64, 1500, 4.33333333333333),
        (65, 1500, 4.26666666666667),
        (66, 1500, 4.21666666666667),
        (67, 1500, 4.16666666666667),
        (68, 1500, 4.1),
        (69, 1500, 4.05),
        (70, 1500, 4),
        (71, 1500, 3.95),
        (72, 1500, 3.9),
        (73, 1500, 3.86666666666667),
        (74, 1500, 3.81666666666667),
        (75, 1500, 3.76666666666667),
        (76, 1500, 3.73333333333333),
        (77, 1500, 3.68333333333333),
        (78, 1500, 3.64666666667),
        (79, 1500, 3.608333333333),
        (80, 1500, 3.5666666666666),
        (81, 1500, 3.53333333333333),
        (82, 1500, 3.495),
        (83, 1500, 3.46),
        (84, 1500, 3.41666666666667),
        (85, 1500, 3.38333333333333),
        (30, 1609.34, 9.18333333333333),
        (31, 1609.34, 8.91666666666667),
        (32, 1609.34, 8.68333333333333),
        (33, 1609.34, 8.45),
        (34, 1609.34, 8.23333333333333),
        (35, 1609.34, 8.01666666666667),
        (36, 1609.34, 7.81666666666667),
        (37, 1609.34, 7.63333333333333),
        (38, 1609.34, 7.45),
        (39, 1609.34, 7.28333333333333),
        (40, 1609.34, 7.11666666666667),
        (41, 1609.34, 6.96666666666667),
        (42, 1609.34, 6.81666666666667),
        (43, 1609.34, 6.68333333333333),
        (44, 1609.34, 6.53333333333333),
        (45, 1609.34, 6.41666666666667),
        (46, 1609.34, 6.28333333333333),
        (47, 1609.34, 6.16666666666667),
        (48, 1609.34, 6.05),
        (49, 1609.34, 5.93333333333333),
        (50, 1609.34, 5.83333333333333),
        (51, 1609.34, 5.73333333333333),
        (52, 1609.34, 5.63333333333333),
        (53, 1609.34, 5.53333333333333),
        (54, 1609.34, 5.45),
        (55, 1609.34, 5.35),
        (56, 1609.34, 5.26666666666667),
        (57, 1609.34, 5.18333333333333),
        (58, 1609.34, 5.1),
        (59, 1609.34, 5.03333333333333),
        (60, 1609.34, 4.95),
        (61, 1609.34, 4.88333333333333),
        (62, 1609.34, 4.81666666666667),
        (63, 1609.34, 4.75),
        (64, 1609.34, 4.68333333333333),
        (65, 1609.34, 4.61666666666667),
        (66, 1609.34, 4.55),
        (67, 1609.34, 4.5),
        (68, 1609.34, 4.43333333333333),
        (69, 1609.34, 4.38333333333333),
        (70, 1609.34, 4.31666666666667),
        (71, 1609.34, 4.26666666666667),
        (72, 1609.34, 4.21666666666667),
        (73, 1609.34, 4.16666666666667),
        (74, 1609.34, 4.11666666666667),
        (75, 1609.34, 4.06666666666667),
        (76, 1609.34, 4.03333333333333),
        (30, 3000, 17.9333333333333),
        (31, 3000, 17.45),
        (32, 3000, 16.9833333333333),
        (33, 3000, 16.55),
        (34, 3000, 16.15),
        (35, 3000, 15.75),
        (36, 3000, 15.3833333333333),
        (37, 3000, 15.0166666666667),
        (38, 3000, 14.6833333333333),
        (39, 3000, 14.35),
        (40, 3000, 14.05),
        (41, 3000, 13.75),
        (42, 3000, 13.4666666666667),
        (43, 3000, 13.1833333333333),
        (44, 3000, 12.9166666666667),
        (45, 3000, 12.6666666666667),
        (46, 3000, 12.4333333333333),
        (47, 3000, 12.2),
        (48, 3000, 11.9666666666667),
        (49, 3000, 11.75),
        (50, 3000, 11.55),
        (51, 3000, 11.35),
        (52, 3000, 11.15),
        (53, 3000, 10.9666666666667),
        (54, 3000, 10.7833333333333),
        (55, 3000, 10.6166666666667),
        (56, 3000, 10.45),
        (57, 3000, 10.2833333333333),
        (58, 3000, 10.1333333333333),
        (59, 3000, 9.96666666666667),
        (60, 3000, 9.83333333333333),
        (61, 3000, 9.68333333333333),
        (62, 3000, 9.55),
        (63, 3000, 9.41666666666667),
        (64, 3000, 9.28333333333333),
        (65, 3000, 9.15),
        (66, 3000, 9.03333333333333),
        (67, 3000, 8.91666666666667),
        (68, 3000, 8.8),
        (69, 3000, 8.68333333333333),
        (70, 3000, 8.56666666666667),
        (71, 3000, 8.46666666666667),
        (72, 3000, 8.36666666666667),
        (73, 3000, 8.26666666666667),
        (74, 3000, 8.16666666666667),
        (75, 3000, 8.06666666666667),
        (76, 3000, 7.96666666666667),
        (77, 3000, 7.88333333333333),
        (78, 3000, 7.8),
        (79, 3000, 7.71666666666667),
        (30, 3218.68, 19.3166666666667),
        (31, 3218.68, 18.8),
        (32, 3218.68, 18.3),
        (33, 3218.68, 17.8333333333333),
        (34, 3218.68, 17.4),
        (35, 3218.68, 16.9666666666667),
        (36, 3218.68, 16.5666666666667),
        (37, 3218.68, 16.1833333333333),
        (38, 3218.68, 15.8166666666667),
        (39, 3218.68, 15.4833333333333),
        (40, 3218.68, 15.1333333333333),
        (41, 3218.68, 14.8166666666667),
        (42, 3218.68, 14.5166666666667),
        (43, 3218.68, 14.2166666666667),
        (44, 3218.68, 13.9333333333333),
        (45, 3218.68, 13.6666666666667),
        (46, 3218.68, 13.4166666666667),
        (47, 3218.68, 13.1666666666667),
        (48, 3218.68, 12.9166666666667),
        (49, 3218.68, 12.6833333333333),
        (50, 3218.68, 12.4666666666667),
        (51, 3218.68, 12.25),
        (52, 3218.68, 12.0333333333333),
        (53, 3218.68, 11.8333333333333),
        (54, 3218.68, 11.65),
        (55, 3218.68, 11.4666666666667),
        (56, 3218.68, 11.2833333333333),
        (57, 3218.68, 11.1),
        (58, 3218.68, 10.9333333333333),
        (59, 3218.68, 10.7666666666667),
        (60, 3218.68, 10.6166666666667),
        (61, 3218.68, 10.45),
        (62, 3218.68, 10.3),
        (63, 3218.68, 10.1666666666667),
        (64, 3218.68, 10.0166666666667),
        (65, 3218.68, 9.88333333333333),
        (66, 3218.68, 9.75),
        (67, 3218.68, 9.61666666666667),
        (68, 3218.68, 9.5),
        (69, 3218.68, 9.38333333333333),
        (70, 3218.68, 9.26666666666667),
        (71, 3218.68, 9.15),
        (72, 3218.68, 9.03333333333333),
        (73, 3218.68, 8.91666666666667),
        (74, 3218.68, 8.81666666666667),
        (75, 3218.68, 8.71666666666667),
        (76, 3218.68, 8.61666666666667),
        (77, 3218.68, 8.51666666666667),
        (78, 3218.68, 8.41666666666667),
        (79, 3218.68, 8.33333333333333),
        (30, 5000, 30.6666666666667),
        (31, 5000, 29.85),
        (32, 5000, 29.0833333333333),
        (33, 5000, 28.35),
        (34, 5000, 27.65),
        (35, 5000, 27),
        (36, 5000, 26.3666666666667),
        (37, 5000, 25.7666666666667),
        (38, 5000, 25.2),
        (39, 5000, 24.65),
        (40, 5000, 24.1333333333333),
        (41, 5000, 23.6333333333333),
        (42, 5000, 23.15),
        (43, 5000, 22.6833333333333),
        (44, 5000, 22.25),
        (45, 5000, 21.8333333333333),
        (46, 5000, 21.4166666666667),
        (47, 5000, 21.0333333333333),
        (48, 5000, 20.65),
        (49, 5000, 20.3),
        (50, 5000, 19.95),
        (51, 5000, 19.6),
        (52, 5000, 19.2833333333333),
        (53, 5000, 18.9666666666667),
        (54, 5000, 18.6666666666667),
        (55, 5000, 18.3666666666667),
        (56, 5000, 18.0833333333333),
        (57, 5000, 17.8166666666667),
        (58, 5000, 17.55),
        (59, 5000, 17.2833333333333),
        (60, 5000, 17.05),
        (61, 5000, 16.8),
        (62, 5000, 16.5666666666667),
        (63, 5000, 16.3333333333333),
        (64, 5000, 16.1166666666667),
        (65, 5000, 15.9),
        (66, 5000, 15.7),
        (67, 5000, 15.4833333333333),
        (68, 5000, 15.3),
        (69, 5000, 15.1),
        (70, 5000, 14.9166666666667),
        (71, 5000, 14.7333333333333),
        (72, 5000, 14.55),
        (73, 5000, 14.3833333333333),
        (74, 5000, 14.2166666666667),
        (75, 5000, 14.05),
        (76, 5000, 13.9),
        (77, 5000, 13.7333333333333),
        (78, 5000, 13.5833333333333),
        (79, 5000, 13.4333333333333),
        (30, 10000, 63.7666666666667),
        (31, 10000, 62.05),
        (32, 10000, 60.4333333333333),
        (33, 10000, 58.9),
        (34, 10000, 57.4333333333333),
        (35, 10000, 56.05),
        (36, 10000, 54.7333333333333),
        (37, 10000, 53.4833333333333),
        (38, 10000, 52.2833333333333),
        (39, 10000, 51.15),
        (40, 10000, 50.05),
        (41, 10000, 49.0166666666667),
        (42, 10000, 48.0166666666667),
        (43, 10000, 47.0666666666667),
        (44, 10000, 46.15),
        (45, 10000, 45.2666666666667),
        (46, 10000, 44.4166666666667),
        (47, 10000, 43.6),
        (48, 10000, 42.8333333333333),
        (49, 10000, 42.0666666666667),
        (50, 10000, 41.35),
        (51, 10000, 40.65),
        (52, 10000, 39.9833333333333),
        (53, 10000, 39.3333333333333),
        (54, 10000, 38.7),
        (55, 10000, 38.1),
        (56, 10000, 37.5166666666667),
        (57, 10000, 36.95),
        (58, 10000, 36.4),
        (59, 10000, 35.8666666666667),
        (60, 10000, 35.3666666666667),
        (61, 10000, 34.8666666666667),
        (62, 10000, 34.3833333333333),
        (63, 10000, 33.9166666666667),
        (64, 10000, 33.4666666666667),
        (65, 10000, 33.0166666666667),
        (66, 10000, 32.5833333333333),
        (67, 10000, 32.1833333333333),
        (68, 10000, 31.7666666666667),
        (69, 10000, 31.3833333333333),
        (70, 10000, 31),
        (71, 10000, 30.6333333333333),
        (72, 10000, 30.2666666666667),
        (73, 10000, 29.9166666666667),
        (74, 10000, 29.5666666666667),
        (75, 10000, 29.2333333333333),
        (76, 10000, 28.9166666666667),
        (77, 10000, 28.6),
        (78, 10000, 28.2833333333333),
        (79, 10000, 27.9833333333333),
        (81, 10000, 27.4),
        (82, 10000, 27.1166666666667),
        (83, 10000, 26.85),
        (84, 10000, 26.5666666666667),
        (85, 10000, 26.3166666666667),
        (30, 15000, 98.2333333333333),
        (31, 15000, 95.6),
        (32, 15000, 93.1166666666667),
        (33, 15000, 90.75),
        (34, 15000, 88.5),
        (35, 15000, 86.3666666666667),
        (36, 15000, 84.3333333333333),
        (37, 15000, 82.4),
        (38, 15000, 80.55),
        (39, 15000, 78.7833333333333),
        (40, 15000, 77.1),
        (41, 15000, 75.4833333333333),
        (42, 15000, 73.9333333333333),
        (43, 15000, 72.45),
        (44, 15000, 71.0333333333333),
        (45, 15000, 69.6666666666667),
        (46, 15000, 68.3666666666667),
        (47, 15000, 67.1),
        (48, 15000, 65.8833333333333),
        (49, 15000, 64.7333333333333),
        (50, 15000, 63.6),
        (51, 15000, 62.5166666666667),
        (52, 15000, 61.4833333333333),
        (53, 15000, 60.4666666666667),
        (54, 15000, 59.5),
        (55, 15000, 58.55),
        (56, 15000, 57.65),
        (57, 15000, 56.7666666666667),
        (58, 15000, 55.9166666666667),
        (59, 15000, 55.1),
        (60, 15000, 54.3),
        (61, 15000, 53.5333333333333),
        (62, 15000, 52.7833333333333),
        (63, 15000, 52.05),
        (64, 15000, 51.35),
        (65, 15000, 50.6666666666667),
        (66, 15000, 50),
        (67, 15000, 49.3666666666667),
        (68, 15000, 48.7333333333333),
        (69, 15000, 48.1333333333333),
        (70, 15000, 47.5333333333333),
        (71, 15000, 46.9666666666667),
        (72, 15000, 46.4),
        (73, 15000, 45.85),
        (74, 15000, 45.3166666666667),
        (75, 15000, 44.8),
        (76, 15000, 44.3),
        (77, 15000, 43.8166666666667),
        (78, 15000, 43.3333333333333),
        (79, 15000, 42.8666666666667),
        (80, 15000, 42.4166666666667),
        (81, 15000, 41.9666666666667),
        (82, 15000, 41.5333333333333),
        (83, 15000, 41.1),
        (84, 15000, 40.7),
        (85, 15000, 40.2833333333333),
        (30, 21097.5, 141.066666666667),
        (31, 21097.5, 137.35),
        (32, 21097.5, 133.816666666667),
        (33, 21097.5, 130.45),
        (34, 21097.5, 127.266666666667),
        (35, 21097.5, 124.216666666667),
        (36, 21097.5, 121.316666666667),
        (37, 21097.5, 118.566666666667),
        (38, 21097.5, 115.916666666667),
        (39, 21097.5, 113.4),
        (40, 21097.5, 110.983333333333),
        (41, 21097.5, 108.666666666667),
        (42, 21097.5, 106.45),
        (43, 21097.5, 104.333333333333),
        (44, 21097.5, 102.283333333333),
        (45, 21097.5, 100.333333333333),
        (46, 21097.5, 98.45),
        (47, 21097.5, 96.6333333333333),
        (48, 21097.5, 94.8833333333333),
        (49, 21097.5, 93.2),
        (50, 21097.5, 91.5833333333333),
        (51, 21097.5, 90.0333333333333),
        (52, 21097.5, 88.5166666666667),
        (53, 21097.5, 87.0666666666667),
        (54, 21097.5, 85.6666666666667),
        (55, 21097.5, 84.3),
        (56, 21097.5, 83),
        (57, 21097.5, 81.7166666666667),
        (58, 21097.5, 80.5),
        (59, 21097.5, 79.3),
        (60, 21097.5, 78.15),
        (61, 21097.5, 77.0333333333333),
        (62, 21097.5, 75.95),
        (63, 21097.5, 74.9),
        (64, 21097.5, 73.8833333333333),
        (65, 21097.5, 72.8833333333333),
        (66, 21097.5, 71.9333333333333),
        (67, 21097.5, 71),
        (68, 21097.5, 70.0833333333333),
        (69, 21097.5, 69.2),
        (70, 21097.5, 68.35),
        (71, 21097.5, 67.5166666666667),
        (72, 21097.5, 66.7),
        (73, 21097.5, 65.9),
        (74, 21097.5, 65.1333333333333),
        (75, 21097.5, 64.3833333333333),
        (76, 21097.5, 63.65),
        (77, 21097.5, 62.9333333333333),
        (78, 21097.5, 62.25),
        (79, 21097.5, 61.5666666666667),
        (80, 21097.5, 60.9),
        (81, 21097.5, 60.25),
        (82, 21097.5, 59.6333333333333),
        (83, 21097.5, 59.0166666666667),
        (84, 21097.5, 58.4166666666667),
        (85, 21097.5, 57.8333333333333),
        (30, 42195, 289.283333333333),
        (31, 42195, 281.95),
        (32, 42195, 274.983333333333),
        (33, 42195, 268.366666666667),
        (34, 42195, 262.05),
        (35, 42195, 256.05),
        (36, 42195, 250.316666666667),
        (37, 42195, 244.833333333333),
        (38, 42195, 239.583333333333),
        (39, 42195, 234.566666666667),
        (40, 42195, 229.75),
        (41, 42195, 225.15),
        (42, 42195, 220.716666666667),
        (43, 42195, 216.466666666667),
        (44, 42195, 212.383333333333),
        (45, 42195, 208.433333333333),
        (46, 42195, 204.65),
        (47, 42195, 201),
        (48, 42195, 197.483333333333),
        (49, 42195, 194.1),
        (50, 42195, 190.816666666667),
        (51, 42195, 187.65),
        (52, 42195, 184.6),
        (53, 42195, 181.65),
        (54, 42195, 178.783333333333),
        (55, 42195, 176.016666666667),
        (56, 42195, 173.333333333333),
        (57, 42195, 170.75),
        (58, 42195, 168.233333333333),
        (59, 42195, 165.783333333333),
        (60, 42195, 163.416666666667),
        (61, 42195, 161.133333333333),
        (62, 42195, 158.9),
        (63, 42195, 156.733333333333),
        (64, 42195, 154.633333333333),
        (65, 42195, 152.583333333333),
        (66, 42195, 150.6),
        (67, 42195, 148.666666666667),
        (68, 42195, 146.783333333333),
        (69, 42195, 144.95),
        (70, 42195, 143.166666666667),
        (71, 42195, 141.433333333333),
        (72, 42195, 139.733333333333),
        (73, 42195, 138.083333333333),
        (74, 42195, 136.483333333333),
        (75, 42195, 134.916666666667),
        (76, 42195, 133.383333333333),
        (77, 42195, 131.9),
        (78, 42195, 130.45),
        (79, 42195, 129.033333333333),
        (80, 42195, 127.633333333333),
        (81, 42195, 126.283333333333),
        (82, 42195, 124.95),
        (83, 42195, 123.666666666667),
        (84, 42195, 122.4),
        (85, 42195, 121.166666666667)
        ])
def test_direct(v_dot, distance, time_minutes):
    assert abs(vdot.direct(time_minutes, distance) - v_dot) <= 0.2

@mark.type_error
def test_vdot_from_time_and_pace_time_TYPE_ERROR_1():
    time = datetime.time(minute=35, second=00)
    pace = 7.0
    with pytest.raises(TypeError) as excinfo:
        v_dot = vdot.vdot_from_time_and_pace(time, pace)  # type: ignore
    assert str(excinfo.value) == "The input should be type datetime.time"


@mark.type_error
def test_vdot_from_time_and_pace_time_TYPE_ERROR_2():
    time = 35.0
    pace = datetime.time(minute=7, second=00)
    with pytest.raises(TypeError) as excinfo:
        v_dot = vdot.vdot_from_time_and_pace(time, pace)  # type: ignore
    assert str(excinfo.value) == "The input should be type datetime.time"
