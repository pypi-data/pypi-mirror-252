###############################################################################
# Copyright (C) 2021 Habana Labs, Ltd. an Intel Company
# All Rights Reserved.
#
# Unauthorized copying of this file or any element(s) within it, via any medium
# is strictly prohibited.
# This file contains Habana Labs, Ltd. proprietary and confidential information
# and is subject to the confidentiality and license agreements under which it
# was provided.
#
###############################################################################
# This file is autogenerated by setup.py
import os
import tensorflow as tf
from .internal.version_getter import get_version_dict, concat_version_dict

_supported_tf_versions = ['2.15.0']

if not any((tf.__version__.startswith(supported) for supported in _supported_tf_versions)):
    raise ImportError(
        f"Found unsupported TF version ({tf.__version__}), supported versions: ({', '.join(_supported_tf_versions)})")


from .lib_utils import libraries_location, get_includes_location, _mandatory_lib
version_dict = get_version_dict(os.path.join(libraries_location, _mandatory_lib))
__version__ = concat_version_dict(version_dict)

def get_include_dir():
    return get_includes_location()


def get_lib_dir():
    return libraries_location


'''
Compilation utilities done in a similar fashion to TensorFlow.

In order to get compile/linker flags, python can be invoked in cmake:
    import habana_frameworks.tensorflow as htf; print(';'.join(htf.sysconfig.get_compile_flags())
    import habana_frameworks.tensorflow as htf; print(' '.join(htf.sysconfig.get_link_flags())
'''


def get_compile_flags():
    return [f'-I{get_includes_location()}']


def get_link_flags():
    return [f'-L{libraries_location}', f'-l:{_mandatory_lib}']
