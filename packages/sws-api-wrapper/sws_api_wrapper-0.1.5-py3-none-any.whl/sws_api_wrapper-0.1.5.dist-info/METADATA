Metadata-Version: 2.1
Name: sws_api_wrapper
Version: 0.1.5
Summary: An API wrapper for So We Sign
Project-URL: Homepage, https://github.com/avivi55/SWS
Project-URL: Issues, https://github.com/avivi55/SWS/issues
Project-URL: Repository, https://github.com/avivi55/SWS.git
License: MIT License
        
        Copyright (c) 2024 Jacques Soghomonyan
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE.txt
Keywords: so we sign,sowesign,sws
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Requires-Dist: user-agent
Description-Content-Type: text/markdown

# SWS

An API wrapper for the signing application SoWeSign.

> [!IMPORTANT]
> THIS IS JUST A WRAPPER.
>
> I DO NOT CONDONE ANY USE OUTSIDE OF SO WE SIGN'S [TOS](https://sowesign.com/mentions-legales/)
>
> THIS PROJECT IS FOR EDUCATIONAL PURPOSES AND IT IS USED IN THE PROCESS OF DISCOVERING THE REST API.


### The project is still in progress but most of it is functional.

This project is composed of 3 'modules', the basic api, and two classes for easier use.
In most cases you'll just use the `User` class in the `User` module.

## TLDR; Examples

#### Printing the 10 next courses of the given user.
```py
from sws_api_wrapper.User import User

user = User.from_digits(institution_code='0000', login_code='00000000', login_pin='0000')

for course in user.get_future_courses(number_of_courses=10):
    print(course.name, course.start.date())
```

#### Checking if `00000` is the correct code for the 1st course of the day (if it is unsigned).
```py
from sws_api_wrapper.User import User

user = User.from_digits(institution_code='0000', login_code='00000000', login_pin='0000')

course = user.get_todays_courses()[0]
code = '00000'

print(user.check_code(course, code))
```

#### Checking if the 1st course of the day is signed by the user.
```py
from sws_api_wrapper.User import User

user = User.from_digits(institution_code='0000', login_code='00000000', login_pin='0000')

course = user.get_todays_courses()[0]

print(user.is_course_signed(course))
```

#### Getting the url of a signed course
```py
from sws_api_wrapper.User import User

user = User.from_digits(institution_code='0000', login_code='00000000', login_pin='0000')

course = user.get_todays_courses()[0]

print(user.get_signature_of_course(course))
```
