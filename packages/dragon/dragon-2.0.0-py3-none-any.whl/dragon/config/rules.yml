---
logos:
  name: "Logos Preprocessor"
  desc: "Preprocessing $in using Logos"
  cmd: "$logos $in > $out"


swift:
  name: "Swift {arch}"
  desc: "Compiling $in with Swift [{arch}]"
  cmd: "SwiftFiles=$$(echo '$swiftfiles $in' | tr ' ' '\\n' | sort | uniq -u); $swift -frontend -c $internalswiftflags $bridgeheader -target {arch}-apple-ios -emit-module-path $out.swiftmodule -primary-file $in $$SwiftFiles -o $out"
swiftmoduleheader:
  name: "Swift Module Header"
  desc: "Generating module header for $in with Swift [{arch}]"
  cmd: "$swift -frontend -c $internalswiftflags $bridgeheader -target arm64-apple-ios8.0 -emit-module -merge-modules $in -emit-objc-header-path $out -o /dev/null"


cargo:
  name: "cargo {arch}"
  desc: "Compiling $in with $cc [{arch}]"
  cmd: "$cargo-nightly --target={arch}-apple-darwin10 $internalcflags -c $in -o $out"

c:
  name: "clang {arch}"
  desc: "Compiling $in with $cc [{arch}]"
  cmd: "$cc -arch {arch} $internalcflags -c $in -o $out"

cxx:
  name: "clang++ {arch}"
  desc: "Compiling $in with $cxx [{arch}]"
  cmd: "$cxx -arch {arch} $internalcflags -c $in -o $out"

objc:
  name: "clang {arch}"
  desc: "Compiling $in with $cc [{arch}]"
  cmd: "$cc -arch {arch} $internalcflags -c $in -o $out"

objcxx:
  name: "clang++ {arch}"
  desc: "Compiling $in with $cxx [{arch}]"
  cmd: "$cxx -arch {arch} $internalcflags -c $in -o $out"


link:
  name: "{arch} Linker"
  desc: "Linking $in with $ld [{arch}]"
  cmd: "$ld -arch {arch} $internallflags $internalldflags -o $out $in"
archive:
  name: "Creating Archive"
  desc: "Creating Static Archive with $ar from $in"
  cmd: "ar cr $out $in"
dummy:
  name: "Copying Files"
  desc: "Copying Files"
  cmd: "cp $in $out"
copy:
  name: "Copying Files"
  desc: "Copying Files"
  cmd: "cp $in $out"
lipo:
  name: "Lipo Utility"
  desc: "Merging architechtures"
  cmd: "$lipo -create $in -output $out"
bundle:
  name: "Bundle Resources"
  desc: "Copying Bundle Resources"
  cmd: "mkdir -p $dragon_data_dir/_$location/ && cp -R $resource_dir/ $dragon_data_dir/_$location"
debug:
  name: "DsymUtil"
  desc: "Generating Debug Symbols for $name"
  cmd: "cp $in $out"
sign:
  name: "$codesign"
  desc: "Signing $name"
  cmd: "$codesign $entflag$entfile $in && cp $in $out"
stage:
  name: "Staging Commands"
  desc: "Running Stage for $name"
  cmd: "$stage && $stage2"
