---
Types:
  comprehensive:
  app:
    variables:
      install_location: '/Applications'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name.app/$name'
      stage2:
        - 'cp -R $resource_dir/* $dragon_data_dir/$stagedir$location/$name.app/'
  application:
    variables:
      install_location: '/Applications'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name.app/$name'
      stage2:
        - 'cp -R $resource_dir/* $dragon_data_dir/$stagedir$location/$name.app/'
  tweak-jailed:
    variables:
      install_location: '/Applications'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name.app/$name'
      embed-libs:
        - CydiaSubstrate
      stage2:
        - 'cp -R $resource_dir/* $dragon_data_dir/$stagedir$location/$name.app/'
  tweak:
    variables:
      install_location: '/Library/MobileSubstrate/DynamicLibraries'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name.dylib'
      lopts: '-dynamiclib -ggdb -framework CydiaSubstrate'
      ldflags: '-install_name @rpath/$name.dylib'
      frameworks:
        - UIKit
      stage2:
        - 'cp $name.plist $dragon_data_dir/$stagedir$location/$name.plist 2>/dev/null  || python3 -m dragongen.bfilter $dragon_data_dir/DragonMake $name > $dragon_data_dir/$stagedir$location/$name.plist'
  prefs:
    variables:
      install_location: '/Library/PreferenceBundles'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name.bundle/$name'
      libs:
        - 'substrate'
      lopts: '-dynamiclib -ggdb -framework Preferences'
      ldflags: '-install_name $location/$name.bundle/$name'
      frameworks:
        - UIKit
      stage2:
        - 'mkdir -p $dragon_data_dir/$stagedir/Library/PreferenceLoader/Preferences/'
        - 'cp entry.plist $dragon_data_dir/stagedir/Library/PreferenceLoader/Preferences/$name.plist 2> /dev/null'
        - 'cp -R $resource_dir/* $dragon_data_dir/$stagedir$location/$name.bundle'
  bundle:
    variables:
      install_location: '/Library'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name.bundle/$name'
      lopts: '-dynamiclib -ggdb'
      ldflags: '-install_name $location/$name.bundle/$name'
      frameworks:
        - UIKit
      stage2:
        - 'cp -R $resource_dir/* $dragon_data_dir/$stagedir$location/$name.bundle/'
  resource-bundle:
    variables:
      install_location: '/Library/$name/$name.bundle/'
      build_target_file: 'build.ninja'
      stage2:
        - 'true;'
  framework:
    variables:
      install_location: '/Library/Frameworks'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name.framework/$name'
      public_headers: '$dragon_root_dir/include/'
      lopts: '-dynamiclib -ggdb'
      ldflags: '-install_name @rpath/$name.framework/$name'
      frameworks:
        - Foundation
      stage2:
        - 'cp -R $resource_dir/* $dragon_data_dir/$stagedir$location/$name.framework'
        - 'cp -R $dragon_data_dir/$stagedir$location/$name.framework $dragon_root_dir/frameworks/$name.framework'
        - 'if ! [ -z "$public_headers" ]; then
           mkdir -p $dragon_data_dir/$stagedir$location/$name.framework/Headers;
           cp $public_headers $dragon_data_dir/$stagedir$location/$name.framework/Headers;
           fi'
  cli:
    variables:
      install_location: '/usr/local/bin'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name'
      stage2:
        - 'true;'
  binary:
    variables:
      install_location: '/usr/local/bin'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name'
      stage2:
        - 'true;'
  tool:
    variables:
      install_location: '/usr/local/bin'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name'
      stage2:
        - 'true;'
  library:
    variables:
      install_location: '/usr/local/lib'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name.dylib'
      ldflags: '-install_name @rpath/$name.dylib'
      lopts: '-dynamiclib -ggdb'
      stage2:
        - 'cp $build_target_file $dragon_root_dir/lib/'
  static:
    variables:
      install_location: '/usr/local/lib'
      build_target_file: '$dragon_data_dir/$stagedir$location/$name.a'
      stage2:
        - 'cp $build_target_file $dragon_root_dir/lib/'
  stage:
    variables:
      build_target_file: 'build.ninja'
      stage2:
        - 'true;'
  raw:
