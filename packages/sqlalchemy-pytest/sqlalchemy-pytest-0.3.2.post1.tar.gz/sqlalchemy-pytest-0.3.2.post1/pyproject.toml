[project]
name = "sqlalchemy-pytest"
version = "0.3.2.post1"
description = ""
authors = [
    { name = "Doctor", email = "thirvondukr@gmail.com" },
]
dependencies = [
    "anyio>=3.6.2",
]
requires-python = ">=3.10"
readme = "README.md"

[project.license]
text = "MIT"

[build-system]
requires = [
    "pdm-pep517>=1.0",
]
build-backend = "pdm.pep517.api"

[tool.pdm.dev-dependencies]
dev = [
    "aiosqlite>=0.19.0",
    "alembic>=1.13.1",
    "asyncpg>=0.29.0",
    "black>=23.12.1",
    "commitizen>=3.13.0",
    "coverage>=7.4.0",
    "isort>=5.13.2",
    "mypy>=1.8.0",
    "pytest>=7.4.4",
    "python-dotenv>=1.0.0",
    "ruff>=0.1.14",
    "sqlalchemy>=2.0.0",
]

[tool.pdm.scripts.lint]
composite = [
    "black .",
    "isort .",
    "ruff .",
    "mypy .",
]

[tool.pdm.scripts.test]
composite = [
    "coverage run",
    "coverage report",
]

[tool.coverage.run]
source = [
    "sqlalchemy_pytest",
]
command_line = "-m pytest -v"
concurrency = [
    "greenlet",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
show_missing = true
skip_covered = true
skip_empty = true
precision = 2

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.3.2.post1"
tag_format = "$version"
version_files = [
    "sqlalchemy_pytest/__init__.py",
    "pyproject.toml:version",
]

[tool.mypy]
follow_imports = "normal"
ignore_missing_imports = false
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_any_generics = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true
strict_equality = true

[tool.isort]
profile = "black"

[tool.ruff]
src = [
    "sqlalchemy_pytest",
    "tests",
]
select = [
    "ALL",
]
ignore = [
    "E501",
    "D",
    "PD",
    "I",
    "INP",
    "EXE",
    "TCH001",
    "TCH002",
    "TCH003",
    "ANN101",
]

[tool.ruff.per-file-ignores]
"tests/*" = [
    "S101",
]

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.mccabe]
max-complexity = 6
