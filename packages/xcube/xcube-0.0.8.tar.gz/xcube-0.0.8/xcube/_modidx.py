# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/xcube',
                'doc_host': 'https://debjyotiSRoy.github.io',
                'git_url': 'https://github.com/debjyotiSRoy/xcube',
                'lib_path': 'xcube'},
  'syms': { 'xcube.basics': {},
            'xcube.collab': { 'xcube.collab.CollabLearner': ('collab.html#collablearner', 'xcube/collab.py'),
                              'xcube.collab.CollabLearner.load_vocab': ('collab.html#collablearner.load_vocab', 'xcube/collab.py'),
                              'xcube.collab.CollabLearner.save': ('collab.html#collablearner.save', 'xcube/collab.py'),
                              'xcube.collab.collab_learner': ('collab.html#collab_learner', 'xcube/collab.py'),
                              'xcube.collab.load_pretrained_keys': ('collab.html#load_pretrained_keys', 'xcube/collab.py'),
                              'xcube.collab.match_embeds': ('collab.html#match_embeds', 'xcube/collab.py')},
            'xcube.data.all': {},
            'xcube.data.external': { 'xcube.data.external.XURLs': ('data.external.html#xurls', 'xcube/data/external.py'),
                                     'xcube.data.external.XURLs.path': ('data.external.html#xurls.path', 'xcube/data/external.py'),
                                     'xcube.data.external.untar_xxx': ('data.external.html#untar_xxx', 'xcube/data/external.py'),
                                     'xcube.data.external.xcube_cfg': ('data.external.html#xcube_cfg', 'xcube/data/external.py'),
                                     'xcube.data.external.xcube_path': ('data.external.html#xcube_path', 'xcube/data/external.py')},
            'xcube.data.transforms': { 'xcube.data.transforms.ListToTensor': ( 'data.transforms.html#listtotensor',
                                                                               'xcube/data/transforms.py'),
                                       'xcube.data.transforms.ListToTensor.decodes': ( 'data.transforms.html#listtotensor.decodes',
                                                                                       'xcube/data/transforms.py'),
                                       'xcube.data.transforms.ListToTensor.encodes': ( 'data.transforms.html#listtotensor.encodes',
                                                                                       'xcube/data/transforms.py')},
            'xcube.fastai_imports': {},
            'xcube.imports': {},
            'xcube.l2r.all': {},
            'xcube.l2r.callbacks': { 'xcube.l2r.callbacks.AMPMode': ('l2r.callbacks.html#ampmode', 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.AvgSmoothMetric': ( 'l2r.callbacks.html#avgsmoothmetric',
                                                                              'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.AvgSmoothMetric.__init__': ( 'l2r.callbacks.html#avgsmoothmetric.__init__',
                                                                                       'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.AvgSmoothMetric.accumulate': ( 'l2r.callbacks.html#avgsmoothmetric.accumulate',
                                                                                         'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.AvgSmoothMetric.reset': ( 'l2r.callbacks.html#avgsmoothmetric.reset',
                                                                                    'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.AvgSmoothMetric.value': ( 'l2r.callbacks.html#avgsmoothmetric.value',
                                                                                    'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.CSVLog': ('l2r.callbacks.html#csvlog', 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.CSVLog.__init__': ( 'l2r.callbacks.html#csvlog.__init__',
                                                                              'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.CSVLog._write_line': ( 'l2r.callbacks.html#csvlog._write_line',
                                                                                 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.CSVLog.after_fit': ( 'l2r.callbacks.html#csvlog.after_fit',
                                                                               'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.CSVLog.before_fit': ( 'l2r.callbacks.html#csvlog.before_fit',
                                                                                'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.CSVLog.read_log': ( 'l2r.callbacks.html#csvlog.read_log',
                                                                              'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.GradientClip': ('l2r.callbacks.html#gradientclip', 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.GradientClip.__init__': ( 'l2r.callbacks.html#gradientclip.__init__',
                                                                                    'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.GradientClip.before_step': ( 'l2r.callbacks.html#gradientclip.before_step',
                                                                                       'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.InterruptCallback': ( 'l2r.callbacks.html#interruptcallback',
                                                                                'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.InterruptCallback.__init__': ( 'l2r.callbacks.html#interruptcallback.__init__',
                                                                                         'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.InterruptCallback.before_epoch': ( 'l2r.callbacks.html#interruptcallback.before_epoch',
                                                                                             'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.L2RLearner.fit_one_cycle': ( 'l2r.callbacks.html#l2rlearner.fit_one_cycle',
                                                                                       'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.L2RLearner.fit_sgdr': ( 'l2r.callbacks.html#l2rlearner.fit_sgdr',
                                                                                  'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.L2RLearner.xrl_find': ( 'l2r.callbacks.html#l2rlearner.xrl_find',
                                                                                  'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MemoryErrorTest': ( 'l2r.callbacks.html#memoryerrortest',
                                                                              'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MemoryErrorTest.after_batch': ( 'l2r.callbacks.html#memoryerrortest.after_batch',
                                                                                          'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MemoryErrorTest.after_cancel_train': ( 'l2r.callbacks.html#memoryerrortest.after_cancel_train',
                                                                                                 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision': ('l2r.callbacks.html#mixedprecision', 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.__init__': ( 'l2r.callbacks.html#mixedprecision.__init__',
                                                                                      'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.after_batch': ( 'l2r.callbacks.html#mixedprecision.after_batch',
                                                                                         'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.after_cancel_step': ( 'l2r.callbacks.html#mixedprecision.after_cancel_step',
                                                                                               'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.after_epoch': ( 'l2r.callbacks.html#mixedprecision.after_epoch',
                                                                                         'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.after_fit': ( 'l2r.callbacks.html#mixedprecision.after_fit',
                                                                                       'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.after_loss': ( 'l2r.callbacks.html#mixedprecision.after_loss',
                                                                                        'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.after_pred': ( 'l2r.callbacks.html#mixedprecision.after_pred',
                                                                                        'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.after_step': ( 'l2r.callbacks.html#mixedprecision.after_step',
                                                                                        'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.before_backward': ( 'l2r.callbacks.html#mixedprecision.before_backward',
                                                                                             'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.before_batch': ( 'l2r.callbacks.html#mixedprecision.before_batch',
                                                                                          'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.before_fit': ( 'l2r.callbacks.html#mixedprecision.before_fit',
                                                                                        'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.before_step': ( 'l2r.callbacks.html#mixedprecision.before_step',
                                                                                         'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.param_groups': ( 'l2r.callbacks.html#mixedprecision.param_groups',
                                                                                          'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.MixedPrecision.step': ( 'l2r.callbacks.html#mixedprecision.step',
                                                                                  'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.Monitor': ('l2r.callbacks.html#monitor', 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.Monitor.__init__': ( 'l2r.callbacks.html#monitor.__init__',
                                                                               'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.Monitor.after_epoch': ( 'l2r.callbacks.html#monitor.after_epoch',
                                                                                  'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.Monitor.before_fit': ( 'l2r.callbacks.html#monitor.before_fit',
                                                                                 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.ProgressBarCallback': ( 'l2r.callbacks.html#progressbarcallback',
                                                                                  'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.ProgressBarCallback._launch_pbar': ( 'l2r.callbacks.html#progressbarcallback._launch_pbar',
                                                                                               'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.ProgressBarCallback._write_stats': ( 'l2r.callbacks.html#progressbarcallback._write_stats',
                                                                                               'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.ProgressBarCallback.after_batch': ( 'l2r.callbacks.html#progressbarcallback.after_batch',
                                                                                              'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.ProgressBarCallback.after_fit': ( 'l2r.callbacks.html#progressbarcallback.after_fit',
                                                                                            'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.ProgressBarCallback.after_train': ( 'l2r.callbacks.html#progressbarcallback.after_train',
                                                                                              'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.ProgressBarCallback.after_validate': ( 'l2r.callbacks.html#progressbarcallback.after_validate',
                                                                                                 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.ProgressBarCallback.before_epoch': ( 'l2r.callbacks.html#progressbarcallback.before_epoch',
                                                                                               'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.ProgressBarCallback.before_fit': ( 'l2r.callbacks.html#progressbarcallback.before_fit',
                                                                                             'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.ProgressBarCallback.before_train': ( 'l2r.callbacks.html#progressbarcallback.before_train',
                                                                                               'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.ProgressBarCallback.before_validate': ( 'l2r.callbacks.html#progressbarcallback.before_validate',
                                                                                                  'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.SaveCallBack': ('l2r.callbacks.html#savecallback', 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.SaveCallBack.__init__': ( 'l2r.callbacks.html#savecallback.__init__',
                                                                                    'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.SaveCallBack.after_epoch': ( 'l2r.callbacks.html#savecallback.after_epoch',
                                                                                       'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.SaveCallBack.best': ( 'l2r.callbacks.html#savecallback.best',
                                                                                'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TestCallback': ('l2r.callbacks.html#testcallback', 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TestCallback.before_batch': ( 'l2r.callbacks.html#testcallback.before_batch',
                                                                                        'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults': ('l2r.callbacks.html#trackresults', 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.__init__': ( 'l2r.callbacks.html#trackresults.__init__',
                                                                                    'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults._compute_epoch_mean': ( 'l2r.callbacks.html#trackresults._compute_epoch_mean',
                                                                                               'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults._compute_metrics': ( 'l2r.callbacks.html#trackresults._compute_metrics',
                                                                                            'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults._initialise_metrics': ( 'l2r.callbacks.html#trackresults._initialise_metrics',
                                                                                               'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.after_backward': ( 'l2r.callbacks.html#trackresults.after_backward',
                                                                                          'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.after_batch': ( 'l2r.callbacks.html#trackresults.after_batch',
                                                                                       'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.after_epoch': ( 'l2r.callbacks.html#trackresults.after_epoch',
                                                                                       'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.after_train': ( 'l2r.callbacks.html#trackresults.after_train',
                                                                                       'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.after_validate': ( 'l2r.callbacks.html#trackresults.after_validate',
                                                                                          'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.before_epoch': ( 'l2r.callbacks.html#trackresults.before_epoch',
                                                                                        'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.before_fit': ( 'l2r.callbacks.html#trackresults.before_fit',
                                                                                      'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.before_train': ( 'l2r.callbacks.html#trackresults.before_train',
                                                                                        'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.before_validate': ( 'l2r.callbacks.html#trackresults.before_validate',
                                                                                           'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.plot_sched': ( 'l2r.callbacks.html#trackresults.plot_sched',
                                                                                      'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrackResults.plot_xlr_find': ( 'l2r.callbacks.html#trackresults.plot_xlr_find',
                                                                                         'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrainEval': ('l2r.callbacks.html#traineval', 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrainEval.after_batch': ( 'l2r.callbacks.html#traineval.after_batch',
                                                                                    'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrainEval.before_fit': ( 'l2r.callbacks.html#traineval.before_fit',
                                                                                   'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrainEval.before_train': ( 'l2r.callbacks.html#traineval.before_train',
                                                                                     'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.TrainEval.before_validate': ( 'l2r.callbacks.html#traineval.before_validate',
                                                                                        'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XLRFinder': ('l2r.callbacks.html#xlrfinder', 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XLRFinder.__init__': ( 'l2r.callbacks.html#xlrfinder.__init__',
                                                                                 'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XLRFinder.after_batch': ( 'l2r.callbacks.html#xlrfinder.after_batch',
                                                                                    'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XLRFinder.after_cancel_validate': ( 'l2r.callbacks.html#xlrfinder.after_cancel_validate',
                                                                                              'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XLRFinder.after_fit': ( 'l2r.callbacks.html#xlrfinder.after_fit',
                                                                                  'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XLRFinder.before_batch': ( 'l2r.callbacks.html#xlrfinder.before_batch',
                                                                                     'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XLRFinder.before_fit': ( 'l2r.callbacks.html#xlrfinder.before_fit',
                                                                                   'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XLRFinder.before_validate': ( 'l2r.callbacks.html#xlrfinder.before_validate',
                                                                                        'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XParamScheduler': ( 'l2r.callbacks.html#xparamscheduler',
                                                                              'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XParamScheduler.__init__': ( 'l2r.callbacks.html#xparamscheduler.__init__',
                                                                                       'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XParamScheduler._update_val': ( 'l2r.callbacks.html#xparamscheduler._update_val',
                                                                                          'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XParamScheduler.after_batch': ( 'l2r.callbacks.html#xparamscheduler.after_batch',
                                                                                          'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XParamScheduler.after_fit': ( 'l2r.callbacks.html#xparamscheduler.after_fit',
                                                                                        'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XParamScheduler.before_batch': ( 'l2r.callbacks.html#xparamscheduler.before_batch',
                                                                                           'xcube/l2r/callbacks.py'),
                                     'xcube.l2r.callbacks.XParamScheduler.before_fit': ( 'l2r.callbacks.html#xparamscheduler.before_fit',
                                                                                         'xcube/l2r/callbacks.py')},
            'xcube.l2r.data.all': {},
            'xcube.l2r.data.boot': { 'xcube.l2r.data.boot.BatchLbsChunkify': ( 'l2r.data.info_gain_old.html#batchlbschunkify',
                                                                               'xcube/l2r/data/boot.py'),
                                     'xcube.l2r.data.boot.BatchLbsChunkify.__init__': ( 'l2r.data.info_gain_old.html#batchlbschunkify.__init__',
                                                                                        'xcube/l2r/data/boot.py'),
                                     'xcube.l2r.data.boot.BatchLbsChunkify.encodes': ( 'l2r.data.info_gain_old.html#batchlbschunkify.encodes',
                                                                                       'xcube/l2r/data/boot.py'),
                                     'xcube.l2r.data.boot.MutualInfoGain': ( 'l2r.data.info_gain_old.html#mutualinfogain',
                                                                             'xcube/l2r/data/boot.py'),
                                     'xcube.l2r.data.boot.MutualInfoGain.__init__': ( 'l2r.data.info_gain_old.html#mutualinfogain.__init__',
                                                                                      'xcube/l2r/data/boot.py'),
                                     'xcube.l2r.data.boot.MutualInfoGain._mutual_info_gain': ( 'l2r.data.info_gain_old.html#mutualinfogain._mutual_info_gain',
                                                                                               'xcube/l2r/data/boot.py'),
                                     'xcube.l2r.data.boot.MutualInfoGain.compute': ( 'l2r.data.info_gain_old.html#mutualinfogain.compute',
                                                                                     'xcube/l2r/data/boot.py'),
                                     'xcube.l2r.data.boot.MutualInfoGain.joint_pmf': ( 'l2r.data.info_gain_old.html#mutualinfogain.joint_pmf',
                                                                                       'xcube/l2r/data/boot.py'),
                                     'xcube.l2r.data.boot.MutualInfoGain.lbs_chunked': ( 'l2r.data.info_gain_old.html#mutualinfogain.lbs_chunked',
                                                                                         'xcube/l2r/data/boot.py'),
                                     'xcube.l2r.data.boot.MutualInfoGain.lbs_frqs': ( 'l2r.data.info_gain_old.html#mutualinfogain.lbs_frqs',
                                                                                      'xcube/l2r/data/boot.py'),
                                     'xcube.l2r.data.boot.MutualInfoGain.onehotify': ( 'l2r.data.info_gain_old.html#mutualinfogain.onehotify',
                                                                                       'xcube/l2r/data/boot.py')},
            'xcube.l2r.data.info_gain': { 'xcube.l2r.data.info_gain.BatchLbsChunkify': ( 'l2r.data.info_gain.html#batchlbschunkify',
                                                                                         'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.BatchLbsChunkify.__init__': ( 'l2r.data.info_gain.html#batchlbschunkify.__init__',
                                                                                                  'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.BatchLbsChunkify.encodes': ( 'l2r.data.info_gain.html#batchlbschunkify.encodes',
                                                                                                 'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.MutualInfoGain': ( 'l2r.data.info_gain.html#mutualinfogain',
                                                                                       'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.MutualInfoGain.__init__': ( 'l2r.data.info_gain.html#mutualinfogain.__init__',
                                                                                                'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.MutualInfoGain._gen': ( 'l2r.data.info_gain.html#mutualinfogain._gen',
                                                                                            'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.MutualInfoGain._mutual_info_gain': ( 'l2r.data.info_gain.html#mutualinfogain._mutual_info_gain',
                                                                                                         'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.MutualInfoGain.compute': ( 'l2r.data.info_gain.html#mutualinfogain.compute',
                                                                                               'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.MutualInfoGain.joint_pmf': ( 'l2r.data.info_gain.html#mutualinfogain.joint_pmf',
                                                                                                 'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.MutualInfoGain.lbs_chunked': ( 'l2r.data.info_gain.html#mutualinfogain.lbs_chunked',
                                                                                                   'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.MutualInfoGain.lbs_frqs': ( 'l2r.data.info_gain.html#mutualinfogain.lbs_frqs',
                                                                                                'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.MutualInfoGain.onehotify': ( 'l2r.data.info_gain.html#mutualinfogain.onehotify',
                                                                                                 'xcube/l2r/data/info_gain.py'),
                                          'xcube.l2r.data.info_gain.MutualInfoGain.show': ( 'l2r.data.info_gain.html#mutualinfogain.show',
                                                                                            'xcube/l2r/data/info_gain.py')},
            'xcube.l2r.data.load': { 'xcube.l2r.data.load.L2RDataLoader': ('l2r.data.load.html#l2rdataloader', 'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.L2RDataLoader.__init__': ( 'l2r.data.load.html#l2rdataloader.__init__',
                                                                                     'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.L2RDataLoader.__len__': ( 'l2r.data.load.html#l2rdataloader.__len__',
                                                                                    'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.L2RDataLoader.before_iter': ( 'l2r.data.load.html#l2rdataloader.before_iter',
                                                                                        'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.L2RDataLoader.create_batch': ( 'l2r.data.load.html#l2rdataloader.create_batch',
                                                                                         'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.L2RDataLoader.create_batches': ( 'l2r.data.load.html#l2rdataloader.create_batches',
                                                                                           'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.L2RDataLoader.get_idxs': ( 'l2r.data.load.html#l2rdataloader.get_idxs',
                                                                                     'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.L2RDataLoader.randomize': ( 'l2r.data.load.html#l2rdataloader.randomize',
                                                                                      'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.L2RDataLoader.shuffle_fn': ( 'l2r.data.load.html#l2rdataloader.shuffle_fn',
                                                                                       'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.PreLoadTrans': ('l2r.data.load.html#preloadtrans', 'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.PreLoadTrans.__init__': ( 'l2r.data.load.html#preloadtrans.__init__',
                                                                                    'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.PreLoadTrans.count_topbins': ( 'l2r.data.load.html#preloadtrans.count_topbins',
                                                                                         'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.PreLoadTrans.datasets': ( 'l2r.data.load.html#preloadtrans.datasets',
                                                                                    'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.PreLoadTrans.num_lbs': ( 'l2r.data.load.html#preloadtrans.num_lbs',
                                                                                   'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.PreLoadTrans.num_toks': ( 'l2r.data.load.html#preloadtrans.num_toks',
                                                                                    'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.PreLoadTrans.pad_split': ( 'l2r.data.load.html#preloadtrans.pad_split',
                                                                                     'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.PreLoadTrans.quantized_score': ( 'l2r.data.load.html#preloadtrans.quantized_score',
                                                                                           'xcube/l2r/data/load.py'),
                                     'xcube.l2r.data.load.PreLoadTrans.train_val_split': ( 'l2r.data.load.html#preloadtrans.train_val_split',
                                                                                           'xcube/l2r/data/load.py')},
            'xcube.l2r.data.stat': {},
            'xcube.l2r.gradients': { 'xcube.l2r.gradients._idcg': ('l2r.gradients.html#_idcg', 'xcube/l2r/gradients.py'),
                                     'xcube.l2r.gradients._summation': ('l2r.gradients.html#_summation', 'xcube/l2r/gradients.py'),
                                     'xcube.l2r.gradients.loss_fn': ('l2r.gradients.html#loss_fn', 'xcube/l2r/gradients.py'),
                                     'xcube.l2r.gradients.loss_fn2': ('l2r.gradients.html#loss_fn2', 'xcube/l2r/gradients.py'),
                                     'xcube.l2r.gradients.rank_loss2': ('l2r.gradients.html#rank_loss2', 'xcube/l2r/gradients.py'),
                                     'xcube.l2r.gradients.rank_loss3': ('l2r.gradients.html#rank_loss3', 'xcube/l2r/gradients.py')},
            'xcube.l2r.learner': { 'xcube.l2r.learner.L2RLearner': ('l2r.learner.html#l2rlearner', 'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.__call__': ( 'l2r.learner.html#l2rlearner.__call__',
                                                                              'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.__init__': ( 'l2r.learner.html#l2rlearner.__init__',
                                                                              'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner._all_batches': ( 'l2r.learner.html#l2rlearner._all_batches',
                                                                                  'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner._do_epoch': ( 'l2r.learner.html#l2rlearner._do_epoch',
                                                                               'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner._do_epoch_train': ( 'l2r.learner.html#l2rlearner._do_epoch_train',
                                                                                     'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner._do_epoch_validate': ( 'l2r.learner.html#l2rlearner._do_epoch_validate',
                                                                                        'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner._step': ('l2r.learner.html#l2rlearner._step', 'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner._with_events': ( 'l2r.learner.html#l2rlearner._with_events',
                                                                                  'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.add_cb': ('l2r.learner.html#l2rlearner.add_cb', 'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.add_cbs': ('l2r.learner.html#l2rlearner.add_cbs', 'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.added_cbs': ( 'l2r.learner.html#l2rlearner.added_cbs',
                                                                               'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.create_opt': ( 'l2r.learner.html#l2rlearner.create_opt',
                                                                                'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.fit': ('l2r.learner.html#l2rlearner.fit', 'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.load': ('l2r.learner.html#l2rlearner.load', 'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.one_batch': ( 'l2r.learner.html#l2rlearner.one_batch',
                                                                               'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.one_epoch': ( 'l2r.learner.html#l2rlearner.one_epoch',
                                                                               'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.remove_cb': ( 'l2r.learner.html#l2rlearner.remove_cb',
                                                                               'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.remove_cbs': ( 'l2r.learner.html#l2rlearner.remove_cbs',
                                                                                'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.removed_cbs': ( 'l2r.learner.html#l2rlearner.removed_cbs',
                                                                                 'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.save': ('l2r.learner.html#l2rlearner.save', 'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.show_results': ( 'l2r.learner.html#l2rlearner.show_results',
                                                                                  'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.L2RLearner.validate': ( 'l2r.learner.html#l2rlearner.validate',
                                                                              'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.SkipToEpoch': ('l2r.learner.html#skiptoepoch', 'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.SkipToEpoch.__init__': ( 'l2r.learner.html#skiptoepoch.__init__',
                                                                               'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.SkipToEpoch.after_cancel_epoch': ( 'l2r.learner.html#skiptoepoch.after_cancel_epoch',
                                                                                         'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.SkipToEpoch.before_epoch': ( 'l2r.learner.html#skiptoepoch.before_epoch',
                                                                                   'xcube/l2r/learner.py'),
                                   'xcube.l2r.learner.get_learner': ('l2r.learner.html#get_learner', 'xcube/l2r/learner.py')},
            'xcube.l2r.models.all': {},
            'xcube.l2r.models.core': { 'xcube.l2r.models.core.L2R_DotProductBias': ( 'l2r.models.core.html#l2r_dotproductbias',
                                                                                     'xcube/l2r/models/core.py'),
                                       'xcube.l2r.models.core.L2R_DotProductBias.__init__': ( 'l2r.models.core.html#l2r_dotproductbias.__init__',
                                                                                              'xcube/l2r/models/core.py'),
                                       'xcube.l2r.models.core.L2R_DotProductBias.forward': ( 'l2r.models.core.html#l2r_dotproductbias.forward',
                                                                                             'xcube/l2r/models/core.py'),
                                       'xcube.l2r.models.core.L2R_NN': ('l2r.models.core.html#l2r_nn', 'xcube/l2r/models/core.py'),
                                       'xcube.l2r.models.core.L2R_NN.__init__': ( 'l2r.models.core.html#l2r_nn.__init__',
                                                                                  'xcube/l2r/models/core.py'),
                                       'xcube.l2r.models.core.L2R_NN.forward': ( 'l2r.models.core.html#l2r_nn.forward',
                                                                                 'xcube/l2r/models/core.py')},
            'xcube.layers': { 'xcube.layers.Diffntble_Planted_Attention': ('layers.html#diffntble_planted_attention', 'xcube/layers.py'),
                              'xcube.layers.ElemWiseLin': ('layers.html#elemwiselin', 'xcube/layers.py'),
                              'xcube.layers.ElemWiseLin.__init__': ('layers.html#elemwiselin.__init__', 'xcube/layers.py'),
                              'xcube.layers.ElemWiseLin.forward': ('layers.html#elemwiselin.forward', 'xcube/layers.py'),
                              'xcube.layers.Embedding': ('layers.html#embedding', 'xcube/layers.py'),
                              'xcube.layers.Embedding.__init__': ('layers.html#embedding.__init__', 'xcube/layers.py'),
                              'xcube.layers.LinBnDrop': ('layers.html#linbndrop', 'xcube/layers.py'),
                              'xcube.layers.LinBnDrop.__init__': ('layers.html#linbndrop.__init__', 'xcube/layers.py'),
                              'xcube.layers.LinBnFlatDrop': ('layers.html#linbnflatdrop', 'xcube/layers.py'),
                              'xcube.layers.LinBnFlatDrop.__init__': ('layers.html#linbnflatdrop.__init__', 'xcube/layers.py'),
                              'xcube.layers.Linear_Attention': ('layers.html#linear_attention', 'xcube/layers.py'),
                              'xcube.layers.PlantedLMDecoder': ('layers.html#plantedlmdecoder', 'xcube/layers.py'),
                              'xcube.layers.PlantedLMDecoder.__init__': ('layers.html#plantedlmdecoder.__init__', 'xcube/layers.py'),
                              'xcube.layers.PlantedLMDecoder.forward': ('layers.html#plantedlmdecoder.forward', 'xcube/layers.py'),
                              'xcube.layers.Planted_Attention': ('layers.html#planted_attention', 'xcube/layers.py'),
                              'xcube.layers.Tensor.inattention': ('layers.html#tensor.inattention', 'xcube/layers.py'),
                              'xcube.layers.Tensor.topkmax': ('layers.html#tensor.topkmax', 'xcube/layers.py'),
                              'xcube.layers.XMLAttention': ('layers.html#xmlattention', 'xcube/layers.py'),
                              'xcube.layers.XMLAttention.__init__': ('layers.html#xmlattention.__init__', 'xcube/layers.py'),
                              'xcube.layers.XMLAttention.attn': ('layers.html#xmlattention.attn', 'xcube/layers.py'),
                              'xcube.layers.XMLAttention.forward': ('layers.html#xmlattention.forward', 'xcube/layers.py'),
                              'xcube.layers._Pay_Attention': ('layers.html#_pay_attention', 'xcube/layers.py'),
                              'xcube.layers._Pay_Attention.__call__': ('layers.html#_pay_attention.__call__', 'xcube/layers.py'),
                              'xcube.layers._Pay_Attention.__init__': ('layers.html#_pay_attention.__init__', 'xcube/layers.py'),
                              'xcube.layers._create_bias': ('layers.html#_create_bias', 'xcube/layers.py'),
                              'xcube.layers._diffntble_planted_attention': ('layers.html#_diffntble_planted_attention', 'xcube/layers.py'),
                              'xcube.layers._linear_attention': ('layers.html#_linear_attention', 'xcube/layers.py'),
                              'xcube.layers._planted_attention': ('layers.html#_planted_attention', 'xcube/layers.py'),
                              'xcube.layers.lincomb': ('layers.html#lincomb', 'xcube/layers.py'),
                              'xcube.layers.split_sort': ('layers.html#split_sort', 'xcube/layers.py')},
            'xcube.metrics': { 'xcube.metrics.accuracy': ('metrics.html#accuracy', 'xcube/metrics.py'),
                               'xcube.metrics.auc_metrics': ('metrics.html#auc_metrics', 'xcube/metrics.py'),
                               'xcube.metrics.batch_lbs_accuracy': ('metrics.html#batch_lbs_accuracy', 'xcube/metrics.py'),
                               'xcube.metrics.ndcg': ('metrics.html#ndcg', 'xcube/metrics.py'),
                               'xcube.metrics.ndcg_at_k': ('metrics.html#ndcg_at_k', 'xcube/metrics.py'),
                               'xcube.metrics.precision_at_k': ('metrics.html#precision_at_k', 'xcube/metrics.py'),
                               'xcube.metrics.precision_at_r': ('metrics.html#precision_at_r', 'xcube/metrics.py'),
                               'xcube.metrics.rareprecision_at_k': ('metrics.html#rareprecision_at_k', 'xcube/metrics.py'),
                               'xcube.metrics.recall_at_k': ('metrics.html#recall_at_k', 'xcube/metrics.py')},
            'xcube.text.all': {},
            'xcube.text.callbacks': { 'xcube.text.callbacks.LabelForcing': ('text.callbacks.html#labelforcing', 'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks.LabelForcing.__init__': ( 'text.callbacks.html#labelforcing.__init__',
                                                                                      'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks.LabelForcing.after_pred': ( 'text.callbacks.html#labelforcing.after_pred',
                                                                                        'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks.RunvalCallback': ( 'text.callbacks.html#runvalcallback',
                                                                               'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks.RunvalCallback.__init__': ( 'text.callbacks.html#runvalcallback.__init__',
                                                                                        'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks.RunvalCallback._batch_val': ( 'text.callbacks.html#runvalcallback._batch_val',
                                                                                          'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks.RunvalCallback._launch_tqbar': ( 'text.callbacks.html#runvalcallback._launch_tqbar',
                                                                                             'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks.RunvalCallback.after_batch': ( 'text.callbacks.html#runvalcallback.after_batch',
                                                                                           'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks.RunvalCallback.after_train': ( 'text.callbacks.html#runvalcallback.after_train',
                                                                                           'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks.RunvalCallback.before_train': ( 'text.callbacks.html#runvalcallback.before_train',
                                                                                            'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks._FakeLearner': ('text.callbacks.html#_fakelearner', 'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks._FakeLearner.to_detach': ( 'text.callbacks.html#_fakelearner.to_detach',
                                                                                       'xcube/text/callbacks.py'),
                                      'xcube.text.callbacks._cpupy': ('text.callbacks.html#_cpupy', 'xcube/text/callbacks.py')},
            'xcube.text.learner': { 'xcube.text.learner.LMLearner.save_decoder': ( 'text.learner.html#lmlearner.save_decoder',
                                                                                   'xcube/text/learner.py'),
                                    'xcube.text.learner.TextLearner': ('text.learner.html#textlearner', 'xcube/text/learner.py'),
                                    'xcube.text.learner.TextLearner.__init__': ( 'text.learner.html#textlearner.__init__',
                                                                                 'xcube/text/learner.py'),
                                    'xcube.text.learner.TextLearner.load': ('text.learner.html#textlearner.load', 'xcube/text/learner.py'),
                                    'xcube.text.learner.TextLearner.load_both': ( 'text.learner.html#textlearner.load_both',
                                                                                  'xcube/text/learner.py'),
                                    'xcube.text.learner.TextLearner.load_brain': ( 'text.learner.html#textlearner.load_brain',
                                                                                   'xcube/text/learner.py'),
                                    'xcube.text.learner.TextLearner.load_collab': ( 'text.learner.html#textlearner.load_collab',
                                                                                    'xcube/text/learner.py'),
                                    'xcube.text.learner.TextLearner.load_diffntble_brain': ( 'text.learner.html#textlearner.load_diffntble_brain',
                                                                                             'xcube/text/learner.py'),
                                    'xcube.text.learner.TextLearner.load_encoder': ( 'text.learner.html#textlearner.load_encoder',
                                                                                     'xcube/text/learner.py'),
                                    'xcube.text.learner.TextLearner.load_pretrained': ( 'text.learner.html#textlearner.load_pretrained',
                                                                                        'xcube/text/learner.py'),
                                    'xcube.text.learner.TextLearner.save': ('text.learner.html#textlearner.save', 'xcube/text/learner.py'),
                                    'xcube.text.learner.TextLearner.save_encoder': ( 'text.learner.html#textlearner.save_encoder',
                                                                                     'xcube/text/learner.py'),
                                    'xcube.text.learner._get_label_vocab': ('text.learner.html#_get_label_vocab', 'xcube/text/learner.py'),
                                    'xcube.text.learner._get_text_vocab': ('text.learner.html#_get_text_vocab', 'xcube/text/learner.py'),
                                    'xcube.text.learner._xml2brain': ('text.learner.html#_xml2brain', 'xcube/text/learner.py'),
                                    'xcube.text.learner.brainsplant': ('text.learner.html#brainsplant', 'xcube/text/learner.py'),
                                    'xcube.text.learner.brainsplant_diffntble': ( 'text.learner.html#brainsplant_diffntble',
                                                                                  'xcube/text/learner.py'),
                                    'xcube.text.learner.load_collab_keys': ('text.learner.html#load_collab_keys', 'xcube/text/learner.py'),
                                    'xcube.text.learner.match_collab': ('text.learner.html#match_collab', 'xcube/text/learner.py'),
                                    'xcube.text.learner.xmltext_classifier_learner': ( 'text.learner.html#xmltext_classifier_learner',
                                                                                       'xcube/text/learner.py')},
            'xcube.text.models.all': {},
            'xcube.text.models.core': { 'xcube.text.models.core.AttentiveSentenceEncoder': ( 'text.models.core.html#attentivesentenceencoder',
                                                                                             'xcube/text/models/core.py'),
                                        'xcube.text.models.core.AttentiveSentenceEncoder.__init__': ( 'text.models.core.html#attentivesentenceencoder.__init__',
                                                                                                      'xcube/text/models/core.py'),
                                        'xcube.text.models.core.AttentiveSentenceEncoder.forward': ( 'text.models.core.html#attentivesentenceencoder.forward',
                                                                                                     'xcube/text/models/core.py'),
                                        'xcube.text.models.core.AttentiveSentenceEncoder.reset': ( 'text.models.core.html#attentivesentenceencoder.reset',
                                                                                                   'xcube/text/models/core.py'),
                                        'xcube.text.models.core.LabelAttentionClassifier': ( 'text.models.core.html#labelattentionclassifier',
                                                                                             'xcube/text/models/core.py'),
                                        'xcube.text.models.core.LabelAttentionClassifier.__init__': ( 'text.models.core.html#labelattentionclassifier.__init__',
                                                                                                      'xcube/text/models/core.py'),
                                        'xcube.text.models.core.LabelAttentionClassifier.forward': ( 'text.models.core.html#labelattentionclassifier.forward',
                                                                                                     'xcube/text/models/core.py'),
                                        'xcube.text.models.core.SentenceEncoder': ( 'text.models.core.html#sentenceencoder',
                                                                                    'xcube/text/models/core.py'),
                                        'xcube.text.models.core.SentenceEncoder.__init__': ( 'text.models.core.html#sentenceencoder.__init__',
                                                                                             'xcube/text/models/core.py'),
                                        'xcube.text.models.core.SentenceEncoder.forward': ( 'text.models.core.html#sentenceencoder.forward',
                                                                                            'xcube/text/models/core.py'),
                                        'xcube.text.models.core.SentenceEncoder.reset': ( 'text.models.core.html#sentenceencoder.reset',
                                                                                          'xcube/text/models/core.py'),
                                        'xcube.text.models.core.SequentialRNN': ( 'text.models.core.html#sequentialrnn',
                                                                                  'xcube/text/models/core.py'),
                                        'xcube.text.models.core.SequentialRNN.reset': ( 'text.models.core.html#sequentialrnn.reset',
                                                                                        'xcube/text/models/core.py'),
                                        'xcube.text.models.core.XPoolingLinearClassifier': ( 'text.models.core.html#xpoolinglinearclassifier',
                                                                                             'xcube/text/models/core.py'),
                                        'xcube.text.models.core.XPoolingLinearClassifier.__init__': ( 'text.models.core.html#xpoolinglinearclassifier.__init__',
                                                                                                      'xcube/text/models/core.py'),
                                        'xcube.text.models.core.XPoolingLinearClassifier.forward': ( 'text.models.core.html#xpoolinglinearclassifier.forward',
                                                                                                     'xcube/text/models/core.py'),
                                        'xcube.text.models.core._get_filter_params': ( 'text.models.core.html#_get_filter_params',
                                                                                       'xcube/text/models/core.py'),
                                        'xcube.text.models.core._pad_tensor': ( 'text.models.core.html#_pad_tensor',
                                                                                'xcube/text/models/core.py'),
                                        'xcube.text.models.core.awd_lstm_xclas_split': ( 'text.models.core.html#awd_lstm_xclas_split',
                                                                                         'xcube/text/models/core.py'),
                                        'xcube.text.models.core.get_xmltext_classifier': ( 'text.models.core.html#get_xmltext_classifier',
                                                                                           'xcube/text/models/core.py'),
                                        'xcube.text.models.core.get_xmltext_classifier2': ( 'text.models.core.html#get_xmltext_classifier2',
                                                                                            'xcube/text/models/core.py'),
                                        'xcube.text.models.core.masked_concat_pool': ( 'text.models.core.html#masked_concat_pool',
                                                                                       'xcube/text/models/core.py')},
            'xcube.torch_imports': {},
            'xcube.utils': { 'xcube.utils.cudamem': ('utils.html#cudamem', 'xcube/utils.py'),
                             'xcube.utils.get_description': ('utils.html#get_description', 'xcube/utils.py'),
                             'xcube.utils.is_colab': ('utils.html#is_colab', 'xcube/utils.py'),
                             'xcube.utils.list_files': ('utils.html#list_files', 'xcube/utils.py'),
                             'xcube.utils.make_paths': ('utils.html#make_paths', 'xcube/utils.py'),
                             'xcube.utils.namestr': ('utils.html#namestr', 'xcube/utils.py'),
                             'xcube.utils.plot_hist': ('utils.html#plot_hist', 'xcube/utils.py'),
                             'xcube.utils.plot_reduction': ('utils.html#plot_reduction', 'xcube/utils.py'),
                             'xcube.utils.test_eqs': ('utils.html#test_eqs', 'xcube/utils.py'),
                             'xcube.utils.validate': ('utils.html#validate', 'xcube/utils.py')}}}
