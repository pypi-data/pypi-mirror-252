# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import search_engine_pb2 as search__engine__pb2


class SearchEngineStub(object):
    """ApplyTemplate service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_candidates = channel.unary_stream(
                '/nlm_search_engine.SearchEngine/get_candidates',
                request_serializer=search__engine__pb2.GetCandidatesRequest.SerializeToString,
                response_deserializer=search__engine__pb2.Candidate.FromString,
                )
        self.async_get_candidates = channel.unary_unary(
                '/nlm_search_engine.SearchEngine/async_get_candidates',
                request_serializer=search__engine__pb2.GetCandidatesRequest.SerializeToString,
                response_deserializer=search__engine__pb2.CandidateResponse.FromString,
                )
        self.create_index = channel.unary_unary(
                '/nlm_search_engine.SearchEngine/create_index',
                request_serializer=search__engine__pb2.CreateIndexRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.add_to_index = channel.unary_unary(
                '/nlm_search_engine.SearchEngine/add_to_index',
                request_serializer=search__engine__pb2.AddToIndexRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class SearchEngineServicer(object):
    """ApplyTemplate service
    """

    def get_candidates(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def async_get_candidates(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create_index(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_to_index(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SearchEngineServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_candidates': grpc.unary_stream_rpc_method_handler(
                    servicer.get_candidates,
                    request_deserializer=search__engine__pb2.GetCandidatesRequest.FromString,
                    response_serializer=search__engine__pb2.Candidate.SerializeToString,
            ),
            'async_get_candidates': grpc.unary_unary_rpc_method_handler(
                    servicer.async_get_candidates,
                    request_deserializer=search__engine__pb2.GetCandidatesRequest.FromString,
                    response_serializer=search__engine__pb2.CandidateResponse.SerializeToString,
            ),
            'create_index': grpc.unary_unary_rpc_method_handler(
                    servicer.create_index,
                    request_deserializer=search__engine__pb2.CreateIndexRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'add_to_index': grpc.unary_unary_rpc_method_handler(
                    servicer.add_to_index,
                    request_deserializer=search__engine__pb2.AddToIndexRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nlm_search_engine.SearchEngine', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SearchEngine(object):
    """ApplyTemplate service
    """

    @staticmethod
    def get_candidates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/nlm_search_engine.SearchEngine/get_candidates',
            search__engine__pb2.GetCandidatesRequest.SerializeToString,
            search__engine__pb2.Candidate.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def async_get_candidates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nlm_search_engine.SearchEngine/async_get_candidates',
            search__engine__pb2.GetCandidatesRequest.SerializeToString,
            search__engine__pb2.CandidateResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def create_index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nlm_search_engine.SearchEngine/create_index',
            search__engine__pb2.CreateIndexRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add_to_index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nlm_search_engine.SearchEngine/add_to_index',
            search__engine__pb2.AddToIndexRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
