[bumpversion]
current_version = 0.2.0
tag = True
commit = True

[metadata]
name = flask_attachments
version = attr: flask_attachments.__version__
author = Alex Rudy
author_email = opensource@alexrudy.net
description = Flask Attachments provides a way to integrate arbitrary media with SQLAlchemy in a Flask website.
long_description = file: README.md
long_description_content_type = text/markdown
classifiers = 
	Operating System :: OS Independent
	Programming Language :: Python
	Development Status :: 2 - Pre-Alpha
	Intended Audience :: Developers
	License :: OSI Approved :: BSD License
	Natural Language :: English
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
license = BSD license,
url = https://github.com/alexrudy/flask_attachments

[options]
packages = find:
package_dir = = src
include_package_data = True
python_requires = >= 3.10
install_requires = 

[options.packages.find]
where = src

[tool:pytest]
testpaths = tests
filterwarnings = 
	error
addopts = 
	--cov=flask_attachments
log_level = NOTSET

[coverage:run]
branch = True
source = 
	src/flask_attachments
	tests/

[coverage:paths]
source = 
	src
	*/site-packages

[coverage:report]
exclude_lines = 
	pragma: no cover
	raise AssertionError
	raise NotImplementedError
	if 0:
	if TYPE_CHECKING:
	if __name__ == .__main__.:
	except BaseException:
	Protocol

[flake8]
select = B, E, F, W, B9, ISC
ignore = 
	E203
	E402
	E501
	E722
	W503
	E712,E711
max-line-length = 120
min_python_version = 3.10.0

[mypy]
files = src/flask_attachments
python_version = 3.10
show_error_codes = True
allow_redefinition = True
disallow_subclassing_any = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
no_implicit_optional = True
local_partial_types = True
no_implicit_reexport = True
strict_equality = True
warn_redundant_casts = True
warn_unused_configs = True
warn_unused_ignores = True

[mypy-dotenv]
ignore_missing_imports = True

[bumpversion:file:src/flask_attachments/__init__.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

[bdist_wheel]
universal = 1

[egg_info]
tag_build = 
tag_date = 0

