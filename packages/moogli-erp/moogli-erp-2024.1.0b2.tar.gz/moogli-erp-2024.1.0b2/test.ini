[app:endi]
use = egg:endi

pyramid.reload_assets=true
pyramid.default_locale_name = fr
pyramid.includes =
                    pyramid_tm
                    pyramid_mailer.testing
                    pyramid_services
                    endi_celery
                    pyramid_layout
                    pyramid_mako
                    pyramid_chameleon
                    pyramid_celery
                    js.deform
                    deform_extensions

#### BEGIN STANDARD CONFIG BLOCK
# CONFIGURE THOSE LINES TO ALLOW THE TESTS TO SETUP A MYSQL DATABASE ####
sqlalchemy.url = mysql://testendi:password@localhost/testendi?charset=utf8mb4
endi_payment_db.url = mysql://testendi:password@localhost/testendi?charset=utf8mb4
endi_payment_db.echo = True

sqlalchemy.echo=False
#sqlalchemy.echo = True

testdb.connect=echo 'quit' | mysql -uroot
testdb.adduser=echo "CREATE USER testendi" | mysql -uroot
testdb.adddb=echo "CREATE DATABASE IF NOT EXISTS testendi; GRANT ALL PRIVILEGES on testendi.* to testendi@localhost IDENTIFIED BY 'password';FLUSH PRIVILEGES;" | mysql -uroot
testdb.drop=echo "DROP DATABASE IF EXISTS testendi"| mysql -uroot
#### END STANDARD CONFIG BLOCK

#### BEGIN VAGRANT CONFIG BLOCK
# Uncomment the following lines, and comment the standard config block to use
# the db server hosted on your VM if you are using Vagrant
# sqlalchemy.url = mysql://endi:endi@127.0.0.1:13306/testendi?charset=utf8
# endi_payment_db.url = mysql://endi:endi@127.0.0.1:13306/testendi?charset=utf8
# sqlalchemy.echo=False

# testdb.connect=echo 'quit' | vagrant ssh -c 'sudo mysql -uroot --password=root'
# testdb.adddb=echo "CREATE DATABASE IF NOT EXISTS testendi; GRANT ALL PRIVILEGES on testendi.* to 'endi';FLUSH PRIVILEGES;" | vagrant ssh -c 'sudo mysql -uroot --password=root'
# testdb.adduser=
# testdb.drop=echo "DROP DATABASE IF EXISTS testendi"| vagrant ssh -c 'sudo mysql -uroot --password=root'
#### END VAGRANT CONFIG BLOCK

session.longtimeout=3600
cache.regions = default_term, second, short_term, long_term
# Pour les tests unitaires, pas d'impact sur le temps de run
cache.enabled = False
cache.type = memory
cache.second.expire = 1
cache.short_term.expire = 1
cache.default_term.expire = 1
cache.long_term.expire = 1
mako.directories = endi:templates
mako.imports = from markupsafe import escape_silent
mako.default_filters = escape_silent
endi.ftpdir=%(here)s/endi/tests/datas/
pyramid_deform.tempdir=%(here)s/endi/tests/tmp
endi.depot_path=%(here)s/endi/tests/tmp/filedepot/

# Pdf storage technic (store the generated pdf files in the file depot directory)
endi.services.task_pdf_storage_service = endi.views.task.pdf_storage_service.PdfFileDepotStorageService
# payment specific configuration see https://framagit.org/endi/endi_payment
# public service
endi.interfaces.IPaymentRecordService = endi_payment.public.paymentservice

# Payment specific configuration see https://framagit.org/endi/endi_payment
# History management service
endi_payment.interfaces.IPaymentRecordHistoryService = endi_payment.history.HistoryDBService

# History Archive service
endi_payment.interfaces.IPaymentArchiveService = endi_payment.archive.FileArchiveService
endi_payment_archive_storage_path = %(here)s/endi/tests/tmp/

# endi.includes=
#         endi_payment

[pipeline:main]
pipeline =
    endi

# Begin logging configuration
[loggers]
keys = root

[handlers]
keys = console

[logger_root]
level = DEBUG
handlers = console

[handler_console]
class = logging.StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic
