from typing import List

from pytweetql.twitter.validation.validation import Validation
from pytweetql.twitter.typing import APIResponse
from pytweetql.twitter.response.user import Users
from pytweetql.twitter.response.tweet import Tweets
from pytweetql.twitter.response.twitterlist import TwitterLists
from pytweetql.twitter.response.error import Error

def parse_errors(response: APIResponse) -> List[Error]:
    """
    Parse for any API errors that ocurred in respone.

    Args:
        response (APIResponse): The response generated by API.
    
    Returns:
        Status: The status of the parsing.
    """
    errors = Validation.detect_errors(response=response)
    return errors


def parse_lists(response: APIResponse) -> TwitterLists:
    """
    Parse each individual list detail from response.

    Args:
        response (APIResponse): The response generated by API.

    Returns:
        TwitterList: A class containing the parsed response and status of the parsing.
    """
    validation = Validation(response=response)
    validation.validate_response_list()

    return TwitterLists(
        response=validation.response,
        status=validation.status
    )


def parse_users(response: APIResponse) -> Users:
    """
    Parse each individual user detail from response.

    Args:
        response (APIResponse): The response generated by API.
    
    Returns:
        Users: A class containing the parsed response and status of the parsing.
    """
    validation = Validation(response=response)
    validation.validate_response_user()

    return Users(
        response=validation.response,
        status=validation.status
    )


def parse_tweets(response: APIResponse, remove_promotions: bool = True) -> Tweets:
    """
    Parse each individual tweet detail from response.

    Args:
        response (APIResponse): The response generated by API.

    Returns:
        Tweets: A class containing the parsed response and status of the parsing.
    """
    validation = Validation(response=response)
    validation.validate_response_tweet()

    return Tweets(
        response=validation.response,
        remove_promotions=remove_promotions,
        status=validation.status
    )