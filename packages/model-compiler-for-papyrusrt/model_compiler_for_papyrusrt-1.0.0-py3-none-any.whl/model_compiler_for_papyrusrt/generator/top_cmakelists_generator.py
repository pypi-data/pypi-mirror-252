#!/usr/bin/env python3
# -*- coding: utf-8 -*-


import os

import model_compiler_for_papyrusrt.build_configuration.top_build_configuration as top_build_configuration


class TopCMakeListsGenerator:

    def __init__(self, destination_dir, target_names):
        '''
        @brief Constructor
        @param[in] destination_dir path to directory which to CMakeLists will be created
        @param[in] target_names list of targets. list of str type.
        '''
        self.__destination_dir = destination_dir
        self.__target_names = target_names


    def generate(self):
        content = self._get_str()
        path = self.__destination_dir + os.sep + 'CMakeLists.txt'

        with open(path, 'w') as fp:
            fp.write(content + os.linesep)


    def _get_str(self):
        template = '''
# @brief Build script for Papyrus-RT project
#
# Do NOT edit!!!
# Generated by the Model Compiler for Papyrus-RT

{add_subdirectory_section}
'''[1:]

        return_str = template.format(
            add_subdirectory_section = self.__get_add_subdirectory_section_str(),
        )

        return return_str


    def __get_add_subdirectory_section_str(self):
        return_str = ''

        for target_name in self.__target_names:
            return_str += 'add_subdirectory({0})\n'.format(target_name)

        return return_str


if __name__ == '__main__':
    # executed
    pass
else:
    # imported
    pass
