Metadata-Version: 2.1
Name: eqldata
Version: 1.6
Summary: The official Python client for the Eql RT Data
Home-page: https://equalsolution.com
Author: Equalsolution
Author-email: info@equalsolution.com
License: MIT
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: Programming Language :: Python
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Office/Business :: Financial :: Investment
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Libraries
Description-Content-Type: text/markdown
License-File: LICENSE.txt

# Eql Rt Data Client - v1.6

The official Python client for subscribing to 1 minutes Data.

Equal Solution is a India-based professional Setup providing realtime and historical data services to stock market traders – to help them take correct trading decisions. Founded in 2007 , we aim to revolutionize delivery of Financial Data in Indian and international exchanges.

We distribute low latency, realtime data of various Stock Exchanges . The data is disseminated in multiple charting and technical analysis platforms which support desktop, server, mobile and web editions.We employs reliable, proven and sophisticated techniques to deliver direct exchange datafeeds into multiple Charting and Technical Analysis platforms. We are  focused to deliver authentic and accurate live data of Stock Market to their clients – at affordable price.

We also provide  Historical EOD and IEOD data for Amibroker™ , MetaStock™ , Advance Get™ & many others.


[Equalsolution] (https://equalsolution.com/) (c) 2023. Licensed under the MIT License.

## Documentation

Installing the client
>pip install eqldata

Usage

Authorization --  Generate Auth Token & getting instrument list

Use Example

```python
from eqldata import DataClient
from eqldata import generate_auth_token, get_instrument_list

username = 'your_username' #email
password = 'your_password'

auth_token = generate_auth_token(username, password)
if auth_token:
    print("Response: ", auth_token)


instrument_list = get_instrument_list(auth_token)

if instrument_list:
    print(instrument_list)
```

Subscribing to Instruments for 1 Minutes Market data
You can subscribe to Instruments from server using the provided client.

>from eqldata import DataClient


List of topics to subscribe to
>instrument_list = ["MCXFUT:CRUDEOILM_I", "MCXFUT:CRUDEOILM_II"]


Subscribe to Instruments data
>DataClient(auth_token, topics_to_subscribe)

Start listening for messages
>client.listen()


Realtime Use Example

```python
from eqldata import DataClient  


auth_token = 'your_auth_token'
instrument_list = ["MCXFUT:CRUDEOILM_I", "MCXFUT:SILVERM_I"]

# Create a DataClient instance
client = DataClient(auth_token, instrument_list)

try:
    while True:
        response = client.listen()
        if response is not None:
            print("Received:", response)
except KeyboardInterrupt:
    client.stop_listening()
    client.disconnect()
```

How to get After Market Data -- 
Historical EOD Data

>from eqldata import generate_auth_token, get_instrument_list, get_EOD, get_1MARKET_DATA

 EOD & Daily EOD Use Example --
 
```python
# EOD Historical EOD data use

from eqldata import get_EOD

# your authentication token
auth_token = 'authentication token'


instruments = [
    "NSEIDX:INDIA_VIX",
    "NSEIDX:NIFTY_100",
    "NSEIDX:NIFTY_200",
    "NSEIDX:NIFTY_50"
]
for_date = "2023-12-27"

result = get_EOD(auth_token, instruments, for_date)
print(result)

```



```python
# Daily EOD 1 Minutes data use

from eqldata import get_1MARKET_DATA

# your authentication token
auth_token = 'authentication token'


instruments = [
    "NSEIDX:INDIA_VIX",
    "NSEIDX:NIFTY_100",
    "NSEIDX:NIFTY_200",
    "NSEIDX:NIFTY_50"
]
for_date = "2023-12-27"

result = get_1MARKET_DATA(auth_token, instruments, for_date)
print(type(result))

```
