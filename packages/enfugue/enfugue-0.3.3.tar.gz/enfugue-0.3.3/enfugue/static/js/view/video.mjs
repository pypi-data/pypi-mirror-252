import{View}from"./base.mjs";import{waitFor,isEmpty}from"../base/helpers.mjs";import{ElementBuilder}from"../base/builder.mjs";const E=new ElementBuilder;class VideoView extends View{static tagName="enfugue-video-view";constructor(e,t){super(e),this.loaded=!1,this.loadedCallbacks=[],this.setVideo(t)}onLoad(e){this.loaded?e(this):this.loadedCallbacks.push(e)}waitForLoad(){return waitFor((()=>this.loaded))}setVideo(e){this.src!==e&&(this.loaded=!1,this.src=e,this.video=document.createElement("video"),this.video.onloadedmetadata=()=>this.videoLoaded(),this.video.autoplay=!0,this.video.loop=!0,this.video.muted=!0,this.video.controls=!0,this.video.src=e)}videoLoaded(){this.loaded=!0,this.width=this.video.videoWidth,this.height=this.video.videoHeight;for(let e of this.loadedCallbacks)e()}setFit(e){for(let t of["actual","stretch","cover","contain"]){let i=`fit-${t}`;t===e?this.addClass(i):this.removeClass(i)}}setAnchor(e,t,i){if(isEmpty(e))this.css("object-position",null);else{let[s,o]=e.split("-"),d="bottom"==s?100:"center"==s?50:0,a="right"==o?100:"center"==o?50:0;this.css("object-position",`calc(${a}% + ${t}px) calc(${d}% + ${i}px)`)}}async build(){let e=await super.build();return e.content(this.video),e}}class VideoPlayerView extends VideoView{setVideo(e){super.setVideo(e),this.video.controls=!0}}export{VideoView,VideoPlayerView};
