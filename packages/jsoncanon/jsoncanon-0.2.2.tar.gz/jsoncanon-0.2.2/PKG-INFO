Metadata-Version: 2.1
Name: jsoncanon
Version: 0.2.2
Summary: Typed Python implementation of JSON Canonicalization Scheme as described in RFC 8785. Currently lacks full floating point support
Home-page: https://github.com/sveinugu/jsoncanon
License: Apache-2.0
Keywords: JSON,RFC-8785,canonicalization,deterministic,serialization,hash
Author: Sveinung Gundersen
Author-email: sveinugu@gmail.com
Requires-Python: >=3.8,<4.0
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries
Requires-Dist: toml (>=0.10.2,<0.11.0)
Project-URL: Repository, https://github.com/sveinugu/jsoncanon
Description-Content-Type: text/markdown

# jsoncanon

Typed Python implementation of JSON Canonicalization Scheme as described in 
[RFC 8785](https://www.rfc-editor.org/rfc/rfc8785.html). The initial release (v0.2.x) is a partial release focused on the 
features needed by the [Sequence Collections working group](https://seqcol.readthedocs.io/) in the
[Global Alliance for Genomics and Health (GA4GH)](https://www.ga4gh.org/).

## Usage

```
>>> import json
>>> from jsoncanon import canonicalize
>>>
>>> data = json.loads('{ "b": [1,3,7], "a": { "y": true, "x": null } }')
>>> canonicalize(data)
b'{"a":{"x":null,"y":true},"b":[1,3,7]}'
```

## Releases

v0.2.0 - Initial release, supporting all data types except for floating point numbers
v0.2.1 - Yanked due to incorrect link
v0.2.2 - Initial release with updated project information
