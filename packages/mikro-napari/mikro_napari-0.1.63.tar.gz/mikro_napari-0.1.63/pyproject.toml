[tool.poetry]
name = "mikro-napari"
version = "0.1.63"
description = "A napari plugin to interact with and provide functionality for a connected arkitekt server"
readme = "README.md"
repository = "https://github.com/jhnnsrs/mikro-napari"
authors = ["jhnnsrs <jhnnsrs@gmail.com>"]
license = "CC BY-NC 3.0"
packages = [{ include = "mikro_napari" }]
classifiers = ["Framework :: napari"]

[tool.poetry.dependencies]
python = ">=3.8,<=3.12"
arkitekt = { version = ">=0.5.58", extras = [
    "reaktion",
    "rekuest",
    "mikro",
    "fluss",
    "unlok"
] }


[tool.poetry.scripts]
mikro-napari = "mikro_napari.run:main"

[tool.mypy]
exclude = ["venv/"]
ignore_missing_imports = true


[tool.ruff]
extend-select = ["ANN001","ANN204", "F401"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

[tool.poetry.group.dev.dependencies]
testcontainers = "3.7.0"
autoflake = "^1.7.7"
pytest = "^7.2.0"
pytest-asyncio = "^0.20.2"
turms = { version = ">=0.3.1", python = "^3.9" }
aiohttp = "^3.8.3"
websockets = "^10.4"
black = "^23.1.0"
pytest-cov = "^4.0.0"
pytest-aiohttp = "^1.0.4"
ruff = "^0.0.254"
mypy = "^1.0.1"
napari = "^0.4.17"


[tool.poetry.plugins."napari.manifest"]
mikro-napari = "mikro_napari:napari.yaml"


[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = ["mikro_napari"]

[tool.pydoc-markdown.renderer]
type = "docusaurus"
docs_base_path = "website/docs"


[tool.pytest.ini_options]
qt_api = "pyqt5"
markers = [
    "integration: marks tests that require a running server",
    "qt: marks tests that require a running qt application",
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
